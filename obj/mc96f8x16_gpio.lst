                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.14 #12827 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module mc96f8x16_gpio
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _P37
                                     12 	.globl _P36
                                     13 	.globl _P35
                                     14 	.globl _P34
                                     15 	.globl _P33
                                     16 	.globl _P32
                                     17 	.globl _P31
                                     18 	.globl _P30
                                     19 	.globl _P27
                                     20 	.globl _P26
                                     21 	.globl _P25
                                     22 	.globl _P24
                                     23 	.globl _P23
                                     24 	.globl _P22
                                     25 	.globl _P21
                                     26 	.globl _P20
                                     27 	.globl _P17
                                     28 	.globl _P16
                                     29 	.globl _P15
                                     30 	.globl _P14
                                     31 	.globl _P13
                                     32 	.globl _P12
                                     33 	.globl _P11
                                     34 	.globl _P10
                                     35 	.globl _P07
                                     36 	.globl _P06
                                     37 	.globl _P05
                                     38 	.globl _P04
                                     39 	.globl _P03
                                     40 	.globl _P02
                                     41 	.globl _P01
                                     42 	.globl _P00
                                     43 	.globl _EO
                                     44 	.globl _DPH1
                                     45 	.globl _DPL1
                                     46 	.globl _DPH
                                     47 	.globl _DPL
                                     48 	.globl _SP
                                     49 	.globl _PSW
                                     50 	.globl _B
                                     51 	.globl _ACC
                                     52 	.globl _FMCR
                                     53 	.globl _FIDR
                                     54 	.globl _FSADRL
                                     55 	.globl _FSADRM
                                     56 	.globl _FSADRH
                                     57 	.globl _I2CSCHR
                                     58 	.globl _I2CSCLR
                                     59 	.globl _I2CSDHR
                                     60 	.globl _I2CDR
                                     61 	.globl _I2CSAR1
                                     62 	.globl _I2CSAR0
                                     63 	.globl _I2CSR
                                     64 	.globl _I2CCR
                                     65 	.globl _UARTDR
                                     66 	.globl _UARTBD
                                     67 	.globl _UARTST
                                     68 	.globl _UARTCR3
                                     69 	.globl _UARTCR2
                                     70 	.globl _UARTCR1
                                     71 	.globl _SPISR
                                     72 	.globl _SPIDR
                                     73 	.globl _SPICR
                                     74 	.globl _ADWIFRH
                                     75 	.globl _ADWIFRL
                                     76 	.globl _ADWCRH
                                     77 	.globl _ADWCRL
                                     78 	.globl _ADWRCR3
                                     79 	.globl _ADWRCR2
                                     80 	.globl _ADWRCR1
                                     81 	.globl _ADWRCR0
                                     82 	.globl _ADCDRH
                                     83 	.globl _ADCDRL
                                     84 	.globl _ADCCRH
                                     85 	.globl _ADCCRL
                                     86 	.globl _BUZCR
                                     87 	.globl _BUZDR
                                     88 	.globl _T2BDRH
                                     89 	.globl _T2BDRL
                                     90 	.globl _T2ADRH
                                     91 	.globl _T2ADRL
                                     92 	.globl _T2CRH
                                     93 	.globl _T2CRL
                                     94 	.globl _T1BDRH
                                     95 	.globl _T1BDRL
                                     96 	.globl _T1ADRH
                                     97 	.globl _T1ADRL
                                     98 	.globl _T1CRH
                                     99 	.globl _T1CRL
                                    100 	.globl _T0CDR
                                    101 	.globl _T0DR
                                    102 	.globl _T0CNT
                                    103 	.globl _T0CR
                                    104 	.globl _WTCR
                                    105 	.globl _WTCNT
                                    106 	.globl _WTDR
                                    107 	.globl _WDTCR
                                    108 	.globl _WDTCNT
                                    109 	.globl _WDTDR
                                    110 	.globl _LVICR
                                    111 	.globl _LVRCR
                                    112 	.globl _PCON
                                    113 	.globl _RSTFR
                                    114 	.globl _BITCR
                                    115 	.globl _BITCNT
                                    116 	.globl _OSCCR
                                    117 	.globl _SCCR
                                    118 	.globl _EIPOL2
                                    119 	.globl _EIPOL1
                                    120 	.globl _EIPOL0H
                                    121 	.globl _EIPOL0L
                                    122 	.globl _EIFLAG1
                                    123 	.globl _EIFLAG0
                                    124 	.globl _IIFLAG
                                    125 	.globl _IP1
                                    126 	.globl _IP
                                    127 	.globl _IE3
                                    128 	.globl _IE2
                                    129 	.globl _IE1
                                    130 	.globl _IE
                                    131 	.globl _P3FSR
                                    132 	.globl _P2FSR
                                    133 	.globl _P1FSRH
                                    134 	.globl _P1FSRL
                                    135 	.globl _P0FSR
                                    136 	.globl _P3PU
                                    137 	.globl _P3OD
                                    138 	.globl _P3IO
                                    139 	.globl _P3
                                    140 	.globl _P2PU
                                    141 	.globl _P2OD
                                    142 	.globl _P2IO
                                    143 	.globl _P2
                                    144 	.globl _P12DB
                                    145 	.globl _P1PU
                                    146 	.globl _P1OD
                                    147 	.globl _P1IO
                                    148 	.globl _P1
                                    149 	.globl _P03DB
                                    150 	.globl _P0PU
                                    151 	.globl _P0OD
                                    152 	.globl _P0IO
                                    153 	.globl _P0
                                    154 	.globl _GPIOPin_Write_PARM_2
                                    155 	.globl _GPIO_Config
                                    156 	.globl _GPIOPin_Write
                                    157 	.globl _GPIOPin_Read
                                    158 	.globl _GPIOPin_Toggle
                                    159 ;--------------------------------------------------------
                                    160 ; special function registers
                                    161 ;--------------------------------------------------------
                                    162 	.area RSEG    (ABS,DATA)
      000000                        163 	.org 0x0000
      000000                        164 _P0::
      000000                        165 	.ds 1
      000001                        166 _P0IO::
      000001                        167 	.ds 1
      000002                        168 _P0OD::
      000002                        169 	.ds 1
      000003                        170 _P0PU::
      000003                        171 	.ds 1
      000004                        172 _P03DB::
      000004                        173 	.ds 1
      000005                        174 _P1::
      000005                        175 	.ds 1
      000006                        176 _P1IO::
      000006                        177 	.ds 1
      000007                        178 _P1OD::
      000007                        179 	.ds 1
      000008                        180 _P1PU::
      000008                        181 	.ds 1
      000009                        182 _P12DB::
      000009                        183 	.ds 1
      00000A                        184 _P2::
      00000A                        185 	.ds 1
      00000B                        186 _P2IO::
      00000B                        187 	.ds 1
      00000C                        188 _P2OD::
      00000C                        189 	.ds 1
      00000D                        190 _P2PU::
      00000D                        191 	.ds 1
      00000E                        192 _P3::
      00000E                        193 	.ds 1
      00000F                        194 _P3IO::
      00000F                        195 	.ds 1
      000010                        196 _P3OD::
      000010                        197 	.ds 1
      000011                        198 _P3PU::
      000011                        199 	.ds 1
      000012                        200 _P0FSR::
      000012                        201 	.ds 1
      000013                        202 _P1FSRL::
      000013                        203 	.ds 1
      000014                        204 _P1FSRH::
      000014                        205 	.ds 1
      000015                        206 _P2FSR::
      000015                        207 	.ds 1
      000016                        208 _P3FSR::
      000016                        209 	.ds 1
      000017                        210 _IE::
      000017                        211 	.ds 1
      000018                        212 _IE1::
      000018                        213 	.ds 1
      000019                        214 _IE2::
      000019                        215 	.ds 1
      00001A                        216 _IE3::
      00001A                        217 	.ds 1
      00001B                        218 _IP::
      00001B                        219 	.ds 1
      00001C                        220 _IP1::
      00001C                        221 	.ds 1
      00001D                        222 _IIFLAG::
      00001D                        223 	.ds 1
      00001E                        224 _EIFLAG0::
      00001E                        225 	.ds 1
      00001F                        226 _EIFLAG1::
      00001F                        227 	.ds 1
      000020                        228 _EIPOL0L::
      000020                        229 	.ds 1
      000021                        230 _EIPOL0H::
      000021                        231 	.ds 1
      000022                        232 _EIPOL1::
      000022                        233 	.ds 1
      000023                        234 _EIPOL2::
      000023                        235 	.ds 1
      000024                        236 _SCCR::
      000024                        237 	.ds 1
      000025                        238 _OSCCR::
      000025                        239 	.ds 1
      000026                        240 _BITCNT::
      000026                        241 	.ds 1
      000027                        242 _BITCR::
      000027                        243 	.ds 1
      000028                        244 _RSTFR::
      000028                        245 	.ds 1
      000029                        246 _PCON::
      000029                        247 	.ds 1
      00002A                        248 _LVRCR::
      00002A                        249 	.ds 1
      00002B                        250 _LVICR::
      00002B                        251 	.ds 1
      00002C                        252 _WDTDR::
      00002C                        253 	.ds 1
      00002D                        254 _WDTCNT::
      00002D                        255 	.ds 1
      00002E                        256 _WDTCR::
      00002E                        257 	.ds 1
      00002F                        258 _WTDR::
      00002F                        259 	.ds 1
      000030                        260 _WTCNT::
      000030                        261 	.ds 1
      000031                        262 _WTCR::
      000031                        263 	.ds 1
      000032                        264 _T0CR::
      000032                        265 	.ds 1
      000033                        266 _T0CNT::
      000033                        267 	.ds 1
      000034                        268 _T0DR::
      000034                        269 	.ds 1
      000035                        270 _T0CDR::
      000035                        271 	.ds 1
      000036                        272 _T1CRL::
      000036                        273 	.ds 1
      000037                        274 _T1CRH::
      000037                        275 	.ds 1
      000038                        276 _T1ADRL::
      000038                        277 	.ds 1
      000039                        278 _T1ADRH::
      000039                        279 	.ds 1
      00003A                        280 _T1BDRL::
      00003A                        281 	.ds 1
      00003B                        282 _T1BDRH::
      00003B                        283 	.ds 1
      00003C                        284 _T2CRL::
      00003C                        285 	.ds 1
      00003D                        286 _T2CRH::
      00003D                        287 	.ds 1
      00003E                        288 _T2ADRL::
      00003E                        289 	.ds 1
      00003F                        290 _T2ADRH::
      00003F                        291 	.ds 1
      000040                        292 _T2BDRL::
      000040                        293 	.ds 1
      000041                        294 _T2BDRH::
      000041                        295 	.ds 1
      000042                        296 _BUZDR::
      000042                        297 	.ds 1
      000043                        298 _BUZCR::
      000043                        299 	.ds 1
      000044                        300 _ADCCRL::
      000044                        301 	.ds 1
      000045                        302 _ADCCRH::
      000045                        303 	.ds 1
      000046                        304 _ADCDRL::
      000046                        305 	.ds 1
      000047                        306 _ADCDRH::
      000047                        307 	.ds 1
      000048                        308 _ADWRCR0::
      000048                        309 	.ds 1
      000049                        310 _ADWRCR1::
      000049                        311 	.ds 1
      00004A                        312 _ADWRCR2::
      00004A                        313 	.ds 1
      00004B                        314 _ADWRCR3::
      00004B                        315 	.ds 1
      00004C                        316 _ADWCRL::
      00004C                        317 	.ds 1
      00004D                        318 _ADWCRH::
      00004D                        319 	.ds 1
      00004E                        320 _ADWIFRL::
      00004E                        321 	.ds 1
      00004F                        322 _ADWIFRH::
      00004F                        323 	.ds 1
      000050                        324 _SPICR::
      000050                        325 	.ds 1
      000051                        326 _SPIDR::
      000051                        327 	.ds 1
      000052                        328 _SPISR::
      000052                        329 	.ds 1
      000053                        330 _UARTCR1::
      000053                        331 	.ds 1
      000054                        332 _UARTCR2::
      000054                        333 	.ds 1
      000055                        334 _UARTCR3::
      000055                        335 	.ds 1
      000056                        336 _UARTST::
      000056                        337 	.ds 1
      000057                        338 _UARTBD::
      000057                        339 	.ds 1
      000058                        340 _UARTDR::
      000058                        341 	.ds 1
      000059                        342 _I2CCR::
      000059                        343 	.ds 1
      00005A                        344 _I2CSR::
      00005A                        345 	.ds 1
      00005B                        346 _I2CSAR0::
      00005B                        347 	.ds 1
      00005C                        348 _I2CSAR1::
      00005C                        349 	.ds 1
      00005D                        350 _I2CDR::
      00005D                        351 	.ds 1
      00005E                        352 _I2CSDHR::
      00005E                        353 	.ds 1
      00005F                        354 _I2CSCLR::
      00005F                        355 	.ds 1
      000060                        356 _I2CSCHR::
      000060                        357 	.ds 1
      000061                        358 _FSADRH::
      000061                        359 	.ds 1
      000062                        360 _FSADRM::
      000062                        361 	.ds 1
      000063                        362 _FSADRL::
      000063                        363 	.ds 1
      000064                        364 _FIDR::
      000064                        365 	.ds 1
      000065                        366 _FMCR::
      000065                        367 	.ds 1
      000066                        368 _ACC::
      000066                        369 	.ds 1
      000067                        370 _B::
      000067                        371 	.ds 1
      000068                        372 _PSW::
      000068                        373 	.ds 1
      000069                        374 _SP::
      000069                        375 	.ds 1
      00006A                        376 _DPL::
      00006A                        377 	.ds 1
      00006B                        378 _DPH::
      00006B                        379 	.ds 1
      00006C                        380 _DPL1::
      00006C                        381 	.ds 1
      00006D                        382 _DPH1::
      00006D                        383 	.ds 1
      00006E                        384 _EO::
      00006E                        385 	.ds 1
                                    386 ;--------------------------------------------------------
                                    387 ; special function bits
                                    388 ;--------------------------------------------------------
                                    389 	.area RSEG    (ABS,DATA)
      000000                        390 	.org 0x0000
      000000                        391 _P00::
      000000                        392 	.ds 1
      000001                        393 _P01::
      000001                        394 	.ds 1
      000002                        395 _P02::
      000002                        396 	.ds 1
      000003                        397 _P03::
      000003                        398 	.ds 1
      000004                        399 _P04::
      000004                        400 	.ds 1
      000005                        401 _P05::
      000005                        402 	.ds 1
      000006                        403 _P06::
      000006                        404 	.ds 1
      000007                        405 _P07::
      000007                        406 	.ds 1
      000008                        407 _P10::
      000008                        408 	.ds 1
      000009                        409 _P11::
      000009                        410 	.ds 1
      00000A                        411 _P12::
      00000A                        412 	.ds 1
      00000B                        413 _P13::
      00000B                        414 	.ds 1
      00000C                        415 _P14::
      00000C                        416 	.ds 1
      00000D                        417 _P15::
      00000D                        418 	.ds 1
      00000E                        419 _P16::
      00000E                        420 	.ds 1
      00000F                        421 _P17::
      00000F                        422 	.ds 1
      000010                        423 _P20::
      000010                        424 	.ds 1
      000011                        425 _P21::
      000011                        426 	.ds 1
      000012                        427 _P22::
      000012                        428 	.ds 1
      000013                        429 _P23::
      000013                        430 	.ds 1
      000014                        431 _P24::
      000014                        432 	.ds 1
      000015                        433 _P25::
      000015                        434 	.ds 1
      000016                        435 _P26::
      000016                        436 	.ds 1
      000017                        437 _P27::
      000017                        438 	.ds 1
      000018                        439 _P30::
      000018                        440 	.ds 1
      000019                        441 _P31::
      000019                        442 	.ds 1
      00001A                        443 _P32::
      00001A                        444 	.ds 1
      00001B                        445 _P33::
      00001B                        446 	.ds 1
      00001C                        447 _P34::
      00001C                        448 	.ds 1
      00001D                        449 _P35::
      00001D                        450 	.ds 1
      00001E                        451 _P36::
      00001E                        452 	.ds 1
      00001F                        453 _P37::
      00001F                        454 	.ds 1
                                    455 ;--------------------------------------------------------
                                    456 ; overlayable register banks
                                    457 ;--------------------------------------------------------
                                    458 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        459 	.ds 8
                                    460 ;--------------------------------------------------------
                                    461 ; internal ram data
                                    462 ;--------------------------------------------------------
                                    463 	.area DSEG    (DATA)
                                    464 ;--------------------------------------------------------
                                    465 ; overlayable items in internal ram 
                                    466 ;--------------------------------------------------------
                                    467 ;--------------------------------------------------------
                                    468 ; indirectly addressable internal ram data
                                    469 ;--------------------------------------------------------
                                    470 	.area ISEG    (DATA)
                                    471 ;--------------------------------------------------------
                                    472 ; absolute internal ram data
                                    473 ;--------------------------------------------------------
                                    474 	.area IABS    (ABS,DATA)
                                    475 	.area IABS    (ABS,DATA)
                                    476 ;--------------------------------------------------------
                                    477 ; bit data
                                    478 ;--------------------------------------------------------
                                    479 	.area BSEG    (BIT)
                                    480 ;--------------------------------------------------------
                                    481 ; paged external ram data
                                    482 ;--------------------------------------------------------
                                    483 	.area PSEG    (PAG,XDATA)
                                    484 ;--------------------------------------------------------
                                    485 ; external ram data
                                    486 ;--------------------------------------------------------
                                    487 	.area XSEG    (XDATA)
      000000                        488 _GPIOPin_Write_PARM_2:
      000000                        489 	.ds 1
      000001                        490 _GPIOPin_Write_GPIO_Pin_65536_7:
      000001                        491 	.ds 1
      000002                        492 _GPIOPin_Read_GPIO_Pin_65536_22:
      000002                        493 	.ds 1
      000003                        494 _GPIOPin_Read_ret_65536_23:
      000003                        495 	.ds 1
      000004                        496 _GPIOPin_Toggle_GPIO_Pin_65536_25:
      000004                        497 	.ds 1
                                    498 ;--------------------------------------------------------
                                    499 ; absolute external ram data
                                    500 ;--------------------------------------------------------
                                    501 	.area XABS    (ABS,XDATA)
                                    502 ;--------------------------------------------------------
                                    503 ; external initialized ram data
                                    504 ;--------------------------------------------------------
                                    505 	.area XISEG   (XDATA)
                                    506 	.area HOME    (CODE)
                                    507 	.area GSINIT0 (CODE)
                                    508 	.area GSINIT1 (CODE)
                                    509 	.area GSINIT2 (CODE)
                                    510 	.area GSINIT3 (CODE)
                                    511 	.area GSINIT4 (CODE)
                                    512 	.area GSINIT5 (CODE)
                                    513 	.area GSINIT  (CODE)
                                    514 	.area GSFINAL (CODE)
                                    515 	.area CSEG    (CODE)
                                    516 ;--------------------------------------------------------
                                    517 ; global & static initialisations
                                    518 ;--------------------------------------------------------
                                    519 	.area HOME    (CODE)
                                    520 	.area GSINIT  (CODE)
                                    521 	.area GSFINAL (CODE)
                                    522 	.area GSINIT  (CODE)
                                    523 ;	./inc/mc96f8x16.h:37: sfr			P0			= 0x80;			// P0 Data Register
      000000 75*00 80         [24]  524 	mov	_P0,#0x80
                                    525 ;	./inc/mc96f8x16.h:47: sfr			P0IO		= 0xA1;			// P0 Direction Register
      000003 75*01 A1         [24]  526 	mov	_P0IO,#0xa1
                                    527 ;	./inc/mc96f8x16.h:48: sfr			P0OD		= 0x91;			// P0 Open-drain Selection Register
      000006 75*02 91         [24]  528 	mov	_P0OD,#0x91
                                    529 ;	./inc/mc96f8x16.h:49: sfr			P0PU		= 0xAC;			// P0 Pull-up Resistor Selection Register
      000009 75*03 AC         [24]  530 	mov	_P0PU,#0xac
                                    531 ;	./inc/mc96f8x16.h:50: sfr			P03DB		= 0xDE;			// P0/P3 Debounce Enable Register
      00000C 75*04 DE         [24]  532 	mov	_P03DB,#0xde
                                    533 ;	./inc/mc96f8x16.h:52: sfr			P1			= 0x88;			// P1 Data Register
      00000F 75*05 88         [24]  534 	mov	_P1,#0x88
                                    535 ;	./inc/mc96f8x16.h:62: sfr			P1IO		= 0xB1;			// P1 Direction Register
      000012 75*06 B1         [24]  536 	mov	_P1IO,#0xb1
                                    537 ;	./inc/mc96f8x16.h:63: sfr			P1OD		= 0x92;			// P1 Open-drain Selection Register
      000015 75*07 92         [24]  538 	mov	_P1OD,#0x92
                                    539 ;	./inc/mc96f8x16.h:64: sfr			P1PU		= 0xAD;			// P1 Pull-up Resistor Selection Register
      000018 75*08 AD         [24]  540 	mov	_P1PU,#0xad
                                    541 ;	./inc/mc96f8x16.h:65: sfr			P12DB		= 0xDF;			// P1/P2 Debounce Enable Register
      00001B 75*09 DF         [24]  542 	mov	_P12DB,#0xdf
                                    543 ;	./inc/mc96f8x16.h:67: sfr			P2			= 0x90;			// P2 Data Register
      00001E 75*0A 90         [24]  544 	mov	_P2,#0x90
                                    545 ;	./inc/mc96f8x16.h:77: sfr			P2IO		= 0xB9;			// P2 Direction Register
      000021 75*0B B9         [24]  546 	mov	_P2IO,#0xb9
                                    547 ;	./inc/mc96f8x16.h:78: sfr			P2OD		= 0x93;			// P2 Open-drain Selection Register
      000024 75*0C 93         [24]  548 	mov	_P2OD,#0x93
                                    549 ;	./inc/mc96f8x16.h:79: sfr			P2PU		= 0xAE;			// P2 Pull-up Resistor Selection Register
      000027 75*0D AE         [24]  550 	mov	_P2PU,#0xae
                                    551 ;	./inc/mc96f8x16.h:81: sfr			P3			= 0x98;			// P3 Data Register
      00002A 75*0E 98         [24]  552 	mov	_P3,#0x98
                                    553 ;	./inc/mc96f8x16.h:91: sfr			P3IO		= 0xC1;			// P3 Direction Register
      00002D 75*0F C1         [24]  554 	mov	_P3IO,#0xc1
                                    555 ;	./inc/mc96f8x16.h:92: sfr			P3OD		= 0x94;			// P3 Open-drain Selection Register
      000030 75*10 94         [24]  556 	mov	_P3OD,#0x94
                                    557 ;	./inc/mc96f8x16.h:93: sfr			P3PU		= 0xAF;			// P3 Pull-up Resistor Selection Register
      000033 75*11 AF         [24]  558 	mov	_P3PU,#0xaf
                                    559 ;	./inc/mc96f8x16.h:95: sfr			P0FSR		= 0xD3;			//P0 Function Selection Register
      000036 75*12 D3         [24]  560 	mov	_P0FSR,#0xd3
                                    561 ;	./inc/mc96f8x16.h:96: sfr			P1FSRL		= 0xD4;			//P1 Function Selection Low Register
      000039 75*13 D4         [24]  562 	mov	_P1FSRL,#0xd4
                                    563 ;	./inc/mc96f8x16.h:97: sfr			P1FSRH		= 0xD5;			//P1 Function Selection High Register
      00003C 75*14 D5         [24]  564 	mov	_P1FSRH,#0xd5
                                    565 ;	./inc/mc96f8x16.h:98: sfr			P2FSR		= 0xD6;			//P2 Function Selection Register
      00003F 75*15 D6         [24]  566 	mov	_P2FSR,#0xd6
                                    567 ;	./inc/mc96f8x16.h:99: sfr			P3FSR		= 0xD7;			//P3 Function Selection Register
      000042 75*16 D7         [24]  568 	mov	_P3FSR,#0xd7
                                    569 ;	./inc/mc96f8x16.h:102: sfr			IE			= 0xA8;			// Interrupt Enable Register 0
      000045 75*17 A8         [24]  570 	mov	_IE,#0xa8
                                    571 ;	./inc/mc96f8x16.h:103: sfr			IE1			= 0xA9;			// Interrupt Enable Register 1
      000048 75*18 A9         [24]  572 	mov	_IE1,#0xa9
                                    573 ;	./inc/mc96f8x16.h:104: sfr			IE2			= 0xAA;			// Interrupt Enable Register 2
      00004B 75*19 AA         [24]  574 	mov	_IE2,#0xaa
                                    575 ;	./inc/mc96f8x16.h:105: sfr			IE3			= 0xAB;			// Interrupt Enable Register 3
      00004E 75*1A AB         [24]  576 	mov	_IE3,#0xab
                                    577 ;	./inc/mc96f8x16.h:106: sfr			IP			= 0xB8;			// Interrupt Priority Register 0
      000051 75*1B B8         [24]  578 	mov	_IP,#0xb8
                                    579 ;	./inc/mc96f8x16.h:107: sfr			IP1			= 0xF8;			// Interrupt Priority Register 1
      000054 75*1C F8         [24]  580 	mov	_IP1,#0xf8
                                    581 ;	./inc/mc96f8x16.h:108: sfr			IIFLAG		= 0xA0;			// Internal Interrupt Flag Register
      000057 75*1D A0         [24]  582 	mov	_IIFLAG,#0xa0
                                    583 ;	./inc/mc96f8x16.h:109: sfr			EIFLAG0		= 0xC0;			// External Interrupt Flag 0 Register
      00005A 75*1E C0         [24]  584 	mov	_EIFLAG0,#0xc0
                                    585 ;	./inc/mc96f8x16.h:110: sfr			EIFLAG1		= 0xB0;			// External Interrupt Flag 1 Register
      00005D 75*1F B0         [24]  586 	mov	_EIFLAG1,#0xb0
                                    587 ;	./inc/mc96f8x16.h:111: sfr			EIPOL0L		= 0xA4;			// External Interrupt Polarity 0 Low Register
      000060 75*20 A4         [24]  588 	mov	_EIPOL0L,#0xa4
                                    589 ;	./inc/mc96f8x16.h:112: sfr			EIPOL0H		= 0xA5;			// External Interrupt Polarity 0 High Register
      000063 75*21 A5         [24]  590 	mov	_EIPOL0H,#0xa5
                                    591 ;	./inc/mc96f8x16.h:113: sfr			EIPOL1		= 0xA6;			// External Interrupt Polarity 1 Register
      000066 75*22 A6         [24]  592 	mov	_EIPOL1,#0xa6
                                    593 ;	./inc/mc96f8x16.h:114: sfr			EIPOL2		= 0xA7;			// External Interrupt Polarity 2 Register
      000069 75*23 A7         [24]  594 	mov	_EIPOL2,#0xa7
                                    595 ;	./inc/mc96f8x16.h:117: sfr			SCCR		= 0x8A;			// System Clock Control Register
      00006C 75*24 8A         [24]  596 	mov	_SCCR,#0x8a
                                    597 ;	./inc/mc96f8x16.h:118: sfr			OSCCR		= 0xC8;			// Oscillator Control Register
      00006F 75*25 C8         [24]  598 	mov	_OSCCR,#0xc8
                                    599 ;	./inc/mc96f8x16.h:119: sfr			BITCNT		= 0x8C;			// Basic Interval Timer Counter Register
      000072 75*26 8C         [24]  600 	mov	_BITCNT,#0x8c
                                    601 ;	./inc/mc96f8x16.h:120: sfr			BITCR		= 0x8B;			// Basic Interval Timer Control Register
      000075 75*27 8B         [24]  602 	mov	_BITCR,#0x8b
                                    603 ;	./inc/mc96f8x16.h:121: sfr			RSTFR		= 0xE8;			// Reset Flag Register
      000078 75*28 E8         [24]  604 	mov	_RSTFR,#0xe8
                                    605 ;	./inc/mc96f8x16.h:122: sfr			PCON		= 0x87;			// Power Control Register
      00007B 75*29 87         [24]  606 	mov	_PCON,#0x87
                                    607 ;	./inc/mc96f8x16.h:123: sfr			LVRCR		= 0xD8;			// Low Voltage Reset Control Register
      00007E 75*2A D8         [24]  608 	mov	_LVRCR,#0xd8
                                    609 ;	./inc/mc96f8x16.h:124: sfr			LVICR		= 0x86;			// Low Voltage Indicator Control Register
      000081 75*2B 86         [24]  610 	mov	_LVICR,#0x86
                                    611 ;	./inc/mc96f8x16.h:127: sfr			WDTDR		= 0x8E;			// Watch Dog Timer Data Register
      000084 75*2C 8E         [24]  612 	mov	_WDTDR,#0x8e
                                    613 ;	./inc/mc96f8x16.h:128: sfr			WDTCNT		= 0x8E;			// Watch Dog Timer Counter Register
      000087 75*2D 8E         [24]  614 	mov	_WDTCNT,#0x8e
                                    615 ;	./inc/mc96f8x16.h:129: sfr			WDTCR		= 0x8D;			// Watch Dog Timer Control Register
      00008A 75*2E 8D         [24]  616 	mov	_WDTCR,#0x8d
                                    617 ;	./inc/mc96f8x16.h:132: sfr			WTDR		= 0x89;			// Watch Timer Data Register
      00008D 75*2F 89         [24]  618 	mov	_WTDR,#0x89
                                    619 ;	./inc/mc96f8x16.h:133: sfr			WTCNT		= 0x89;			// Watch Timer Counter Register
      000090 75*30 89         [24]  620 	mov	_WTCNT,#0x89
                                    621 ;	./inc/mc96f8x16.h:134: sfr			WTCR		= 0x96;			// Watch Timer Control Register
      000093 75*31 96         [24]  622 	mov	_WTCR,#0x96
                                    623 ;	./inc/mc96f8x16.h:137: sfr			T0CR		= 0xB2;			// Timer 0 Control Register
      000096 75*32 B2         [24]  624 	mov	_T0CR,#0xb2
                                    625 ;	./inc/mc96f8x16.h:138: sfr			T0CNT		= 0xB3;			// Timer 0 Counter Register
      000099 75*33 B3         [24]  626 	mov	_T0CNT,#0xb3
                                    627 ;	./inc/mc96f8x16.h:139: sfr			T0DR		= 0xB4;			// Timer 0 Data Register
      00009C 75*34 B4         [24]  628 	mov	_T0DR,#0xb4
                                    629 ;	./inc/mc96f8x16.h:140: sfr			T0CDR		= 0xB4;			// Timer 0 Capture Data Register
      00009F 75*35 B4         [24]  630 	mov	_T0CDR,#0xb4
                                    631 ;	./inc/mc96f8x16.h:146: sfr			T1CRL		= 0xBA;			// Timer 1 Control Low Register
      0000A2 75*36 BA         [24]  632 	mov	_T1CRL,#0xba
                                    633 ;	./inc/mc96f8x16.h:147: sfr			T1CRH		= 0xBB;			// Timer 1 Control High Register
      0000A5 75*37 BB         [24]  634 	mov	_T1CRH,#0xbb
                                    635 ;	./inc/mc96f8x16.h:148: sfr			T1ADRL		= 0xBC;			// Timer 1 A Data Low Register
      0000A8 75*38 BC         [24]  636 	mov	_T1ADRL,#0xbc
                                    637 ;	./inc/mc96f8x16.h:149: sfr			T1ADRH		= 0xBD;			// Timer 1 A Data High Register
      0000AB 75*39 BD         [24]  638 	mov	_T1ADRH,#0xbd
                                    639 ;	./inc/mc96f8x16.h:150: sfr			T1BDRL		= 0xBE;			// Timer 1 B Data Low Register
      0000AE 75*3A BE         [24]  640 	mov	_T1BDRL,#0xbe
                                    641 ;	./inc/mc96f8x16.h:151: sfr			T1BDRH		= 0xBF;			// Timer 1 B Data High Register
      0000B1 75*3B BF         [24]  642 	mov	_T1BDRH,#0xbf
                                    643 ;	./inc/mc96f8x16.h:154: sfr			T2CRL		= 0xC2;			// Timer 2 Control Low Register
      0000B4 75*3C C2         [24]  644 	mov	_T2CRL,#0xc2
                                    645 ;	./inc/mc96f8x16.h:155: sfr			T2CRH		= 0xC3;			// Timer 2 Control High Register
      0000B7 75*3D C3         [24]  646 	mov	_T2CRH,#0xc3
                                    647 ;	./inc/mc96f8x16.h:156: sfr			T2ADRL		= 0xC4;			// Timer 2 A Data Low Register
      0000BA 75*3E C4         [24]  648 	mov	_T2ADRL,#0xc4
                                    649 ;	./inc/mc96f8x16.h:157: sfr			T2ADRH		= 0xC5;			// Timer 2 A Data High Register
      0000BD 75*3F C5         [24]  650 	mov	_T2ADRH,#0xc5
                                    651 ;	./inc/mc96f8x16.h:158: sfr			T2BDRL		= 0xC6;			// Timer 2 B Data Low Register
      0000C0 75*40 C6         [24]  652 	mov	_T2BDRL,#0xc6
                                    653 ;	./inc/mc96f8x16.h:159: sfr			T2BDRH		= 0xC7;			// Timer 2 B Data High Register
      0000C3 75*41 C7         [24]  654 	mov	_T2BDRH,#0xc7
                                    655 ;	./inc/mc96f8x16.h:162: sfr			BUZDR		= 0x8F;			// BUZZER Data Register
      0000C6 75*42 8F         [24]  656 	mov	_BUZDR,#0x8f
                                    657 ;	./inc/mc96f8x16.h:163: sfr			BUZCR		= 0x97;			// BUZZER Control Register
      0000C9 75*43 97         [24]  658 	mov	_BUZCR,#0x97
                                    659 ;	./inc/mc96f8x16.h:166: sfr			ADCCRL		= 0x9C;			// A/D Converter Control Low Register
      0000CC 75*44 9C         [24]  660 	mov	_ADCCRL,#0x9c
                                    661 ;	./inc/mc96f8x16.h:167: sfr			ADCCRH		= 0x9D;			// A/D Converter Control High Register
      0000CF 75*45 9D         [24]  662 	mov	_ADCCRH,#0x9d
                                    663 ;	./inc/mc96f8x16.h:168: sfr			ADCDRL		= 0x9E;			// A/D Converter Data Low Register
      0000D2 75*46 9E         [24]  664 	mov	_ADCDRL,#0x9e
                                    665 ;	./inc/mc96f8x16.h:169: sfr			ADCDRH		= 0x9F;			// A/D Converter Data High Register
      0000D5 75*47 9F         [24]  666 	mov	_ADCDRH,#0x9f
                                    667 ;	./inc/mc96f8x16.h:171: sfr			ADWRCR0		= 0xF2;			// ADC Wake-up Resistor Control Register 0
      0000D8 75*48 F2         [24]  668 	mov	_ADWRCR0,#0xf2
                                    669 ;	./inc/mc96f8x16.h:172: sfr			ADWRCR1		= 0xF3;			// ADC Wake-up Resistor Control Register 1
      0000DB 75*49 F3         [24]  670 	mov	_ADWRCR1,#0xf3
                                    671 ;	./inc/mc96f8x16.h:173: sfr			ADWRCR2		= 0xF4;			// ADC Wake-up Resistor Control Register 2
      0000DE 75*4A F4         [24]  672 	mov	_ADWRCR2,#0xf4
                                    673 ;	./inc/mc96f8x16.h:174: sfr			ADWRCR3		= 0xF5;			// ADC Wake-up Resistor Control Register 3
      0000E1 75*4B F5         [24]  674 	mov	_ADWRCR3,#0xf5
                                    675 ;	./inc/mc96f8x16.h:175: sfr			ADWCRL		= 0xF6;			// ADC Wake-up Control Low Register
      0000E4 75*4C F6         [24]  676 	mov	_ADWCRL,#0xf6
                                    677 ;	./inc/mc96f8x16.h:176: sfr			ADWCRH		= 0xF7;			// ADC Wake-up Control High Register
      0000E7 75*4D F7         [24]  678 	mov	_ADWCRH,#0xf7
                                    679 ;	./inc/mc96f8x16.h:177: sfr			ADWIFRL		= 0xDC;			// ADC Wake-up Interrupt Flag Low Register
      0000EA 75*4E DC         [24]  680 	mov	_ADWIFRL,#0xdc
                                    681 ;	./inc/mc96f8x16.h:178: sfr			ADWIFRH		= 0xDD;			// ADC Wake-up Interrupt Flag High Register
      0000ED 75*4F DD         [24]  682 	mov	_ADWIFRH,#0xdd
                                    683 ;	./inc/mc96f8x16.h:181: sfr			SPICR		= 0xB5;			// SPI Control Register
      0000F0 75*50 B5         [24]  684 	mov	_SPICR,#0xb5
                                    685 ;	./inc/mc96f8x16.h:182: sfr			SPIDR		= 0xB6;			// SPI Data Register
      0000F3 75*51 B6         [24]  686 	mov	_SPIDR,#0xb6
                                    687 ;	./inc/mc96f8x16.h:183: sfr			SPISR		= 0xB7;			// SPI Status Register
      0000F6 75*52 B7         [24]  688 	mov	_SPISR,#0xb7
                                    689 ;	./inc/mc96f8x16.h:186: sfr			UARTCR1		= 0xE2;			// UART Control Register 1
      0000F9 75*53 E2         [24]  690 	mov	_UARTCR1,#0xe2
                                    691 ;	./inc/mc96f8x16.h:187: sfr			UARTCR2		= 0xE3;			// UART Control Register 2
      0000FC 75*54 E3         [24]  692 	mov	_UARTCR2,#0xe3
                                    693 ;	./inc/mc96f8x16.h:188: sfr			UARTCR3		= 0xE4;			// UART Control Register 3
      0000FF 75*55 E4         [24]  694 	mov	_UARTCR3,#0xe4
                                    695 ;	./inc/mc96f8x16.h:189: sfr			UARTST		= 0xE5;			// UART Status Register
      000102 75*56 E5         [24]  696 	mov	_UARTST,#0xe5
                                    697 ;	./inc/mc96f8x16.h:190: sfr			UARTBD		= 0xE6;			// UART BaudRate Register
      000105 75*57 E6         [24]  698 	mov	_UARTBD,#0xe6
                                    699 ;	./inc/mc96f8x16.h:191: sfr			UARTDR		= 0xE7;			// UART Data Register
      000108 75*58 E7         [24]  700 	mov	_UARTDR,#0xe7
                                    701 ;	./inc/mc96f8x16.h:194: sfr			I2CCR		= 0xE9;			// I2C Control Register
      00010B 75*59 E9         [24]  702 	mov	_I2CCR,#0xe9
                                    703 ;	./inc/mc96f8x16.h:195: sfr			I2CSR		= 0xEA;			// I2C Status Register
      00010E 75*5A EA         [24]  704 	mov	_I2CSR,#0xea
                                    705 ;	./inc/mc96f8x16.h:196: sfr			I2CSAR0		= 0xEB;			// I2C Slave Address 0 Register
      000111 75*5B EB         [24]  706 	mov	_I2CSAR0,#0xeb
                                    707 ;	./inc/mc96f8x16.h:197: sfr			I2CSAR1		= 0xF1;			// I2C Slave Address 1 Register
      000114 75*5C F1         [24]  708 	mov	_I2CSAR1,#0xf1
                                    709 ;	./inc/mc96f8x16.h:198: sfr			I2CDR		= 0xEC;			// I2C Data Register
      000117 75*5D EC         [24]  710 	mov	_I2CDR,#0xec
                                    711 ;	./inc/mc96f8x16.h:199: sfr			I2CSDHR		= 0xED;			// I2C SDA Hold Time Register
      00011A 75*5E ED         [24]  712 	mov	_I2CSDHR,#0xed
                                    713 ;	./inc/mc96f8x16.h:200: sfr			I2CSCLR		= 0xEE;			// I2C SCL Low Period Register
      00011D 75*5F EE         [24]  714 	mov	_I2CSCLR,#0xee
                                    715 ;	./inc/mc96f8x16.h:201: sfr			I2CSCHR		= 0xEF;			// I2C SCL High Period Register
      000120 75*60 EF         [24]  716 	mov	_I2CSCHR,#0xef
                                    717 ;	./inc/mc96f8x16.h:204: sfr			FSADRH		= 0xFA;			// Flash Sector Address High Register
      000123 75*61 FA         [24]  718 	mov	_FSADRH,#0xfa
                                    719 ;	./inc/mc96f8x16.h:205: sfr			FSADRM		= 0xFB;			// Flash Sector Address Middle Register
      000126 75*62 FB         [24]  720 	mov	_FSADRM,#0xfb
                                    721 ;	./inc/mc96f8x16.h:206: sfr			FSADRL		= 0xFC;			// Flash Sector Address Low Register
      000129 75*63 FC         [24]  722 	mov	_FSADRL,#0xfc
                                    723 ;	./inc/mc96f8x16.h:207: sfr			FIDR		= 0xFD;			// Flash Identification Register
      00012C 75*64 FD         [24]  724 	mov	_FIDR,#0xfd
                                    725 ;	./inc/mc96f8x16.h:208: sfr			FMCR		= 0xFE;			// Flash Mode Control Register
      00012F 75*65 FE         [24]  726 	mov	_FMCR,#0xfe
                                    727 ;	./inc/mc96f8x16.h:210: sfr			ACC			= 0xE0;
      000132 75*66 E0         [24]  728 	mov	_ACC,#0xe0
                                    729 ;	./inc/mc96f8x16.h:211: sfr			B			= 0xF0;
      000135 75*67 F0         [24]  730 	mov	_B,#0xf0
                                    731 ;	./inc/mc96f8x16.h:212: sfr			PSW			= 0xD0;
      000138 75*68 D0         [24]  732 	mov	_PSW,#0xd0
                                    733 ;	./inc/mc96f8x16.h:213: sfr			SP			= 0x81;
      00013B 75*69 81         [24]  734 	mov	_SP,#0x81
                                    735 ;	./inc/mc96f8x16.h:214: sfr			DPL			= 0x82;
      00013E 75*6A 82         [24]  736 	mov	_DPL,#0x82
                                    737 ;	./inc/mc96f8x16.h:215: sfr			DPH			= 0x83;
      000141 75*6B 83         [24]  738 	mov	_DPH,#0x83
                                    739 ;	./inc/mc96f8x16.h:216: sfr			DPL1		= 0x84;
      000144 75*6C 84         [24]  740 	mov	_DPL1,#0x84
                                    741 ;	./inc/mc96f8x16.h:217: sfr			DPH1		= 0x85;
      000147 75*6D 85         [24]  742 	mov	_DPH1,#0x85
                                    743 ;	./inc/mc96f8x16.h:218: sfr			EO			= 0xA2;			// EXTENDED OPERATION REGISTER
      00014A 75*6E A2         [24]  744 	mov	_EO,#0xa2
                                    745 ;	./inc/mc96f8x16.h:38: sbit	P00			= 0x80;
                                    746 ;	assignBit
      00014D D2*00            [12]  747 	setb	_P00
                                    748 ;	./inc/mc96f8x16.h:39: sbit	P01			= 0x81;
                                    749 ;	assignBit
      00014F D2*01            [12]  750 	setb	_P01
                                    751 ;	./inc/mc96f8x16.h:40: sbit	P02			= 0x82;
                                    752 ;	assignBit
      000151 D2*02            [12]  753 	setb	_P02
                                    754 ;	./inc/mc96f8x16.h:41: sbit	P03			= 0x83;
                                    755 ;	assignBit
      000153 D2*03            [12]  756 	setb	_P03
                                    757 ;	./inc/mc96f8x16.h:42: sbit	P04			= 0x84;
                                    758 ;	assignBit
      000155 D2*04            [12]  759 	setb	_P04
                                    760 ;	./inc/mc96f8x16.h:43: sbit	P05			= 0x85;
                                    761 ;	assignBit
      000157 D2*05            [12]  762 	setb	_P05
                                    763 ;	./inc/mc96f8x16.h:44: sbit	P06			= 0x86;
                                    764 ;	assignBit
      000159 D2*06            [12]  765 	setb	_P06
                                    766 ;	./inc/mc96f8x16.h:45: sbit	P07			= 0x87;
                                    767 ;	assignBit
      00015B D2*07            [12]  768 	setb	_P07
                                    769 ;	./inc/mc96f8x16.h:53: sbit	P10			= 0x88;
                                    770 ;	assignBit
      00015D D2*08            [12]  771 	setb	_P10
                                    772 ;	./inc/mc96f8x16.h:54: sbit	P11			= 0x89;
                                    773 ;	assignBit
      00015F D2*09            [12]  774 	setb	_P11
                                    775 ;	./inc/mc96f8x16.h:55: sbit	P12			= 0x8A;
                                    776 ;	assignBit
      000161 D2*0A            [12]  777 	setb	_P12
                                    778 ;	./inc/mc96f8x16.h:56: sbit	P13			= 0x8B;
                                    779 ;	assignBit
      000163 D2*0B            [12]  780 	setb	_P13
                                    781 ;	./inc/mc96f8x16.h:57: sbit	P14			= 0x8C;
                                    782 ;	assignBit
      000165 D2*0C            [12]  783 	setb	_P14
                                    784 ;	./inc/mc96f8x16.h:58: sbit	P15			= 0x8D;
                                    785 ;	assignBit
      000167 D2*0D            [12]  786 	setb	_P15
                                    787 ;	./inc/mc96f8x16.h:59: sbit	P16			= 0x8E;
                                    788 ;	assignBit
      000169 D2*0E            [12]  789 	setb	_P16
                                    790 ;	./inc/mc96f8x16.h:60: sbit	P17			= 0x8F;
                                    791 ;	assignBit
      00016B D2*0F            [12]  792 	setb	_P17
                                    793 ;	./inc/mc96f8x16.h:68: sbit	P20			= 0x90;
                                    794 ;	assignBit
      00016D D2*10            [12]  795 	setb	_P20
                                    796 ;	./inc/mc96f8x16.h:69: sbit	P21			= 0x91;
                                    797 ;	assignBit
      00016F D2*11            [12]  798 	setb	_P21
                                    799 ;	./inc/mc96f8x16.h:70: sbit	P22			= 0x92;
                                    800 ;	assignBit
      000171 D2*12            [12]  801 	setb	_P22
                                    802 ;	./inc/mc96f8x16.h:71: sbit	P23			= 0x93;
                                    803 ;	assignBit
      000173 D2*13            [12]  804 	setb	_P23
                                    805 ;	./inc/mc96f8x16.h:72: sbit	P24			= 0x94;
                                    806 ;	assignBit
      000175 D2*14            [12]  807 	setb	_P24
                                    808 ;	./inc/mc96f8x16.h:73: sbit	P25			= 0x95;
                                    809 ;	assignBit
      000177 D2*15            [12]  810 	setb	_P25
                                    811 ;	./inc/mc96f8x16.h:74: sbit	P26			= 0x96;
                                    812 ;	assignBit
      000179 D2*16            [12]  813 	setb	_P26
                                    814 ;	./inc/mc96f8x16.h:75: sbit	P27			= 0x97;
                                    815 ;	assignBit
      00017B D2*17            [12]  816 	setb	_P27
                                    817 ;	./inc/mc96f8x16.h:82: sbit	P30			= 0x98;
                                    818 ;	assignBit
      00017D D2*18            [12]  819 	setb	_P30
                                    820 ;	./inc/mc96f8x16.h:83: sbit	P31			= 0x99;
                                    821 ;	assignBit
      00017F D2*19            [12]  822 	setb	_P31
                                    823 ;	./inc/mc96f8x16.h:84: sbit	P32			= 0x9A;
                                    824 ;	assignBit
      000181 D2*1A            [12]  825 	setb	_P32
                                    826 ;	./inc/mc96f8x16.h:85: sbit	P33			= 0x9B;
                                    827 ;	assignBit
      000183 D2*1B            [12]  828 	setb	_P33
                                    829 ;	./inc/mc96f8x16.h:86: sbit	P34			= 0x9C;
                                    830 ;	assignBit
      000185 D2*1C            [12]  831 	setb	_P34
                                    832 ;	./inc/mc96f8x16.h:87: sbit	P35			= 0x9D;
                                    833 ;	assignBit
      000187 D2*1D            [12]  834 	setb	_P35
                                    835 ;	./inc/mc96f8x16.h:88: sbit	P36			= 0x9E;
                                    836 ;	assignBit
      000189 D2*1E            [12]  837 	setb	_P36
                                    838 ;	./inc/mc96f8x16.h:89: sbit	P37			= 0x9F;
                                    839 ;	assignBit
      00018B D2*1F            [12]  840 	setb	_P37
                                    841 ;--------------------------------------------------------
                                    842 ; Home
                                    843 ;--------------------------------------------------------
                                    844 	.area HOME    (CODE)
                                    845 	.area HOME    (CODE)
                                    846 ;--------------------------------------------------------
                                    847 ; code
                                    848 ;--------------------------------------------------------
                                    849 	.area CSEG    (CODE)
                                    850 ;------------------------------------------------------------
                                    851 ;Allocation info for local variables in function 'GPIO_Config'
                                    852 ;------------------------------------------------------------
                                    853 ;	src/mc96f8x16_gpio.c:5: void GPIO_Config(void)
                                    854 ;	-----------------------------------------
                                    855 ;	 function GPIO_Config
                                    856 ;	-----------------------------------------
      000000                        857 _GPIO_Config:
                           000007   858 	ar7 = 0x07
                           000006   859 	ar6 = 0x06
                           000005   860 	ar5 = 0x05
                           000004   861 	ar4 = 0x04
                           000003   862 	ar3 = 0x03
                           000002   863 	ar2 = 0x02
                           000001   864 	ar1 = 0x01
                           000000   865 	ar0 = 0x00
                                    866 ;	src/mc96f8x16_gpio.c:8: P0IO = 0x00;    /* All Pins P0 are input */
      000000 75*01 00         [24]  867 	mov	_P0IO,#0x00
                                    868 ;	src/mc96f8x16_gpio.c:9: P0PU = 0x00;    /* All Pins P0 are no pull */
      000003 75*03 00         [24]  869 	mov	_P0PU,#0x00
                                    870 ;	src/mc96f8x16_gpio.c:10: P0FSR = (P0FSR3 | P0FSR4);   /* Select P02 is AN2 and P03 is AN3 */
      000006 75*12 18         [24]  871 	mov	_P0FSR,#0x18
                                    872 ;	src/mc96f8x16_gpio.c:15: P1IO = P14IO;   /* Select P14 as Output and Pin remain as Input */
      000009 75*06 10         [24]  873 	mov	_P1IO,#0x10
                                    874 ;	src/mc96f8x16_gpio.c:16: P1FSRH = (P1FSRH5 | P1FSRH3);     /* Select P15 as AN12, P16 as AN13 */
      00000C 75*14 28         [24]  875 	mov	_P1FSRH,#0x28
                                    876 ;	src/mc96f8x16_gpio.c:19: P2FSR = (P2FSR0 | P2FSR1);    /* Select Pin I2C */
      00000F 75*15 03         [24]  877 	mov	_P2FSR,#0x03
                                    878 ;	src/mc96f8x16_gpio.c:22: P3IO = (uint8_t)(P30IO | P33IO | P34IO | P35IO | P36IO | P37IO);
      000012 75*0F F9         [24]  879 	mov	_P3IO,#0xf9
                                    880 ;	src/mc96f8x16_gpio.c:23: P3FSR = P3FSR0;
      000015 75*16 01         [24]  881 	mov	_P3FSR,#0x01
                                    882 ;	src/mc96f8x16_gpio.c:25: }
      000018 22               [24]  883 	ret
                                    884 ;------------------------------------------------------------
                                    885 ;Allocation info for local variables in function 'GPIOPin_Write'
                                    886 ;------------------------------------------------------------
                                    887 ;PIN_State                 Allocated with name '_GPIOPin_Write_PARM_2'
                                    888 ;GPIO_Pin                  Allocated with name '_GPIOPin_Write_GPIO_Pin_65536_7'
                                    889 ;------------------------------------------------------------
                                    890 ;	src/mc96f8x16_gpio.c:27: void GPIOPin_Write(OUTPUTPin_t GPIO_Pin, GPIOPin_State PIN_State)
                                    891 ;	-----------------------------------------
                                    892 ;	 function GPIOPin_Write
                                    893 ;	-----------------------------------------
      000019                        894 _GPIOPin_Write:
      000019 E5 82            [12]  895 	mov	a,dpl
      00001B 90r00r01         [24]  896 	mov	dptr,#_GPIOPin_Write_GPIO_Pin_65536_7
      00001E F0               [24]  897 	movx	@dptr,a
                                    898 ;	src/mc96f8x16_gpio.c:29: switch (GPIO_Pin)
      00001F E0               [24]  899 	movx	a,@dptr
      000020 FF               [12]  900 	mov  r7,a
      000021 24 FA            [12]  901 	add	a,#0xff - 0x05
      000023 40 59            [24]  902 	jc	00127$
      000025 EF               [12]  903 	mov	a,r7
      000026 2F               [12]  904 	add	a,r7
                                    905 ;	src/mc96f8x16_gpio.c:31: case GPIO_LED1:
      000027 90r00r2B         [24]  906 	mov	dptr,#00158$
      00002A 73               [24]  907 	jmp	@a+dptr
      00002B                        908 00158$:
      00002B 80 0A            [24]  909 	sjmp	00101$
      00002D 80 14            [24]  910 	sjmp	00105$
      00002F 80 1E            [24]  911 	sjmp	00109$
      000031 80 28            [24]  912 	sjmp	00113$
      000033 80 32            [24]  913 	sjmp	00117$
      000035 80 3C            [24]  914 	sjmp	00121$
      000037                        915 00101$:
                                    916 ;	src/mc96f8x16_gpio.c:32: if(PIN_State == GPIO_RESET)
      000037 90r00r00         [24]  917 	mov	dptr,#_GPIOPin_Write_PARM_2
      00003A E0               [24]  918 	movx	a,@dptr
      00003B 70 03            [24]  919 	jnz	00103$
                                    920 ;	src/mc96f8x16_gpio.c:34: P33 = 0;
                                    921 ;	assignBit
      00003D C2*1B            [12]  922 	clr	_P33
      00003F 22               [24]  923 	ret
      000040                        924 00103$:
                                    925 ;	src/mc96f8x16_gpio.c:38: P33 = 1;
                                    926 ;	assignBit
      000040 D2*1B            [12]  927 	setb	_P33
                                    928 ;	src/mc96f8x16_gpio.c:40: break;
                                    929 ;	src/mc96f8x16_gpio.c:41: case GPIO_LED2:
      000042 22               [24]  930 	ret
      000043                        931 00105$:
                                    932 ;	src/mc96f8x16_gpio.c:42: if(PIN_State == GPIO_RESET)
      000043 90r00r00         [24]  933 	mov	dptr,#_GPIOPin_Write_PARM_2
      000046 E0               [24]  934 	movx	a,@dptr
      000047 70 03            [24]  935 	jnz	00107$
                                    936 ;	src/mc96f8x16_gpio.c:44: P34 = 0;
                                    937 ;	assignBit
      000049 C2*1C            [12]  938 	clr	_P34
      00004B 22               [24]  939 	ret
      00004C                        940 00107$:
                                    941 ;	src/mc96f8x16_gpio.c:48: P34 = 1;
                                    942 ;	assignBit
      00004C D2*1C            [12]  943 	setb	_P34
                                    944 ;	src/mc96f8x16_gpio.c:50: break;
                                    945 ;	src/mc96f8x16_gpio.c:51: case GPIO_LED3:
      00004E 22               [24]  946 	ret
      00004F                        947 00109$:
                                    948 ;	src/mc96f8x16_gpio.c:52: if(PIN_State == GPIO_RESET)
      00004F 90r00r00         [24]  949 	mov	dptr,#_GPIOPin_Write_PARM_2
      000052 E0               [24]  950 	movx	a,@dptr
      000053 70 03            [24]  951 	jnz	00111$
                                    952 ;	src/mc96f8x16_gpio.c:54: P35 = 0;
                                    953 ;	assignBit
      000055 C2*1D            [12]  954 	clr	_P35
      000057 22               [24]  955 	ret
      000058                        956 00111$:
                                    957 ;	src/mc96f8x16_gpio.c:58: P35 = 1;
                                    958 ;	assignBit
      000058 D2*1D            [12]  959 	setb	_P35
                                    960 ;	src/mc96f8x16_gpio.c:60: break;
                                    961 ;	src/mc96f8x16_gpio.c:61: case GPIO_5V_CNTL:
      00005A 22               [24]  962 	ret
      00005B                        963 00113$:
                                    964 ;	src/mc96f8x16_gpio.c:62: if(PIN_State == GPIO_RESET)
      00005B 90r00r00         [24]  965 	mov	dptr,#_GPIOPin_Write_PARM_2
      00005E E0               [24]  966 	movx	a,@dptr
      00005F 70 03            [24]  967 	jnz	00115$
                                    968 ;	src/mc96f8x16_gpio.c:64: P36 = 0;
                                    969 ;	assignBit
      000061 C2*1E            [12]  970 	clr	_P36
      000063 22               [24]  971 	ret
      000064                        972 00115$:
                                    973 ;	src/mc96f8x16_gpio.c:68: P36 = 1;
                                    974 ;	assignBit
      000064 D2*1E            [12]  975 	setb	_P36
                                    976 ;	src/mc96f8x16_gpio.c:70: break;
                                    977 ;	src/mc96f8x16_gpio.c:71: case GPIO_DCDC_EN:
      000066 22               [24]  978 	ret
      000067                        979 00117$:
                                    980 ;	src/mc96f8x16_gpio.c:72: if(PIN_State == GPIO_RESET)
      000067 90r00r00         [24]  981 	mov	dptr,#_GPIOPin_Write_PARM_2
      00006A E0               [24]  982 	movx	a,@dptr
      00006B 70 03            [24]  983 	jnz	00119$
                                    984 ;	src/mc96f8x16_gpio.c:74: P37 = 0;
                                    985 ;	assignBit
      00006D C2*1F            [12]  986 	clr	_P37
      00006F 22               [24]  987 	ret
      000070                        988 00119$:
                                    989 ;	src/mc96f8x16_gpio.c:78: P37 = 1;
                                    990 ;	assignBit
      000070 D2*1F            [12]  991 	setb	_P37
                                    992 ;	src/mc96f8x16_gpio.c:80: break;
                                    993 ;	src/mc96f8x16_gpio.c:81: case GPIO_COM_MODE:
      000072 22               [24]  994 	ret
      000073                        995 00121$:
                                    996 ;	src/mc96f8x16_gpio.c:82: if(PIN_State == GPIO_RESET)
      000073 90r00r00         [24]  997 	mov	dptr,#_GPIOPin_Write_PARM_2
      000076 E0               [24]  998 	movx	a,@dptr
      000077 70 03            [24]  999 	jnz	00123$
                                   1000 ;	src/mc96f8x16_gpio.c:84: P14 = 0;
                                   1001 ;	assignBit
      000079 C2*0C            [12] 1002 	clr	_P14
      00007B 22               [24] 1003 	ret
      00007C                       1004 00123$:
                                   1005 ;	src/mc96f8x16_gpio.c:88: P14 = 1;
                                   1006 ;	assignBit
      00007C D2*0C            [12] 1007 	setb	_P14
                                   1008 ;	src/mc96f8x16_gpio.c:93: }
      00007E                       1009 00127$:
                                   1010 ;	src/mc96f8x16_gpio.c:94: }
      00007E 22               [24] 1011 	ret
                                   1012 ;------------------------------------------------------------
                                   1013 ;Allocation info for local variables in function 'GPIOPin_Read'
                                   1014 ;------------------------------------------------------------
                                   1015 ;GPIO_Pin                  Allocated with name '_GPIOPin_Read_GPIO_Pin_65536_22'
                                   1016 ;ret                       Allocated with name '_GPIOPin_Read_ret_65536_23'
                                   1017 ;------------------------------------------------------------
                                   1018 ;	src/mc96f8x16_gpio.c:96: GPIOPin_State GPIOPin_Read(OUTPUTPin_t GPIO_Pin)
                                   1019 ;	-----------------------------------------
                                   1020 ;	 function GPIOPin_Read
                                   1021 ;	-----------------------------------------
      00007F                       1022 _GPIOPin_Read:
      00007F E5 82            [12] 1023 	mov	a,dpl
      000081 90r00r02         [24] 1024 	mov	dptr,#_GPIOPin_Read_GPIO_Pin_65536_22
      000084 F0               [24] 1025 	movx	@dptr,a
                                   1026 ;	src/mc96f8x16_gpio.c:98: GPIOPin_State ret = GPIO_RESET;
      000085 90r00r03         [24] 1027 	mov	dptr,#_GPIOPin_Read_ret_65536_23
      000088 E4               [12] 1028 	clr	a
      000089 F0               [24] 1029 	movx	@dptr,a
                                   1030 ;	src/mc96f8x16_gpio.c:99: switch (GPIO_Pin)
      00008A 90r00r02         [24] 1031 	mov	dptr,#_GPIOPin_Read_GPIO_Pin_65536_22
      00008D E0               [24] 1032 	movx	a,@dptr
      00008E FF               [12] 1033 	mov  r7,a
      00008F 24 FA            [12] 1034 	add	a,#0xff - 0x05
      000091 40 4C            [24] 1035 	jc	00108$
      000093 EF               [12] 1036 	mov	a,r7
      000094 2F               [12] 1037 	add	a,r7
                                   1038 ;	src/mc96f8x16_gpio.c:101: case GPIO_LED1:
      000095 90r00r99         [24] 1039 	mov	dptr,#00116$
      000098 73               [24] 1040 	jmp	@a+dptr
      000099                       1041 00116$:
      000099 80 0A            [24] 1042 	sjmp	00101$
      00009B 80 12            [24] 1043 	sjmp	00102$
      00009D 80 1A            [24] 1044 	sjmp	00103$
      00009F 80 22            [24] 1045 	sjmp	00104$
      0000A1 80 2A            [24] 1046 	sjmp	00105$
      0000A3 80 32            [24] 1047 	sjmp	00106$
      0000A5                       1048 00101$:
                                   1049 ;	src/mc96f8x16_gpio.c:102: ret = P33;
      0000A5 90r00r03         [24] 1050 	mov	dptr,#_GPIOPin_Read_ret_65536_23
      0000A8 A2*1B            [12] 1051 	mov	c,_P33
      0000AA E4               [12] 1052 	clr	a
      0000AB 33               [12] 1053 	rlc	a
      0000AC F0               [24] 1054 	movx	@dptr,a
                                   1055 ;	src/mc96f8x16_gpio.c:103: break;
                                   1056 ;	src/mc96f8x16_gpio.c:104: case GPIO_LED2:
      0000AD 80 30            [24] 1057 	sjmp	00108$
      0000AF                       1058 00102$:
                                   1059 ;	src/mc96f8x16_gpio.c:105: ret = P34;
      0000AF 90r00r03         [24] 1060 	mov	dptr,#_GPIOPin_Read_ret_65536_23
      0000B2 A2*1C            [12] 1061 	mov	c,_P34
      0000B4 E4               [12] 1062 	clr	a
      0000B5 33               [12] 1063 	rlc	a
      0000B6 F0               [24] 1064 	movx	@dptr,a
                                   1065 ;	src/mc96f8x16_gpio.c:106: break;
                                   1066 ;	src/mc96f8x16_gpio.c:107: case GPIO_LED3:
      0000B7 80 26            [24] 1067 	sjmp	00108$
      0000B9                       1068 00103$:
                                   1069 ;	src/mc96f8x16_gpio.c:108: ret = P35;
      0000B9 90r00r03         [24] 1070 	mov	dptr,#_GPIOPin_Read_ret_65536_23
      0000BC A2*1D            [12] 1071 	mov	c,_P35
      0000BE E4               [12] 1072 	clr	a
      0000BF 33               [12] 1073 	rlc	a
      0000C0 F0               [24] 1074 	movx	@dptr,a
                                   1075 ;	src/mc96f8x16_gpio.c:109: break;
                                   1076 ;	src/mc96f8x16_gpio.c:110: case GPIO_5V_CNTL:
      0000C1 80 1C            [24] 1077 	sjmp	00108$
      0000C3                       1078 00104$:
                                   1079 ;	src/mc96f8x16_gpio.c:111: ret = P36;
      0000C3 90r00r03         [24] 1080 	mov	dptr,#_GPIOPin_Read_ret_65536_23
      0000C6 A2*1E            [12] 1081 	mov	c,_P36
      0000C8 E4               [12] 1082 	clr	a
      0000C9 33               [12] 1083 	rlc	a
      0000CA F0               [24] 1084 	movx	@dptr,a
                                   1085 ;	src/mc96f8x16_gpio.c:112: break;
                                   1086 ;	src/mc96f8x16_gpio.c:113: case GPIO_DCDC_EN:
      0000CB 80 12            [24] 1087 	sjmp	00108$
      0000CD                       1088 00105$:
                                   1089 ;	src/mc96f8x16_gpio.c:114: ret = P37;
      0000CD 90r00r03         [24] 1090 	mov	dptr,#_GPIOPin_Read_ret_65536_23
      0000D0 A2*1F            [12] 1091 	mov	c,_P37
      0000D2 E4               [12] 1092 	clr	a
      0000D3 33               [12] 1093 	rlc	a
      0000D4 F0               [24] 1094 	movx	@dptr,a
                                   1095 ;	src/mc96f8x16_gpio.c:115: break;
                                   1096 ;	src/mc96f8x16_gpio.c:116: case GPIO_COM_MODE:
      0000D5 80 08            [24] 1097 	sjmp	00108$
      0000D7                       1098 00106$:
                                   1099 ;	src/mc96f8x16_gpio.c:117: ret = P14;
      0000D7 90r00r03         [24] 1100 	mov	dptr,#_GPIOPin_Read_ret_65536_23
      0000DA A2*0C            [12] 1101 	mov	c,_P14
      0000DC E4               [12] 1102 	clr	a
      0000DD 33               [12] 1103 	rlc	a
      0000DE F0               [24] 1104 	movx	@dptr,a
                                   1105 ;	src/mc96f8x16_gpio.c:121: }
      0000DF                       1106 00108$:
                                   1107 ;	src/mc96f8x16_gpio.c:122: return ret;
      0000DF 90r00r03         [24] 1108 	mov	dptr,#_GPIOPin_Read_ret_65536_23
      0000E2 E0               [24] 1109 	movx	a,@dptr
                                   1110 ;	src/mc96f8x16_gpio.c:123: }
      0000E3 F5 82            [12] 1111 	mov	dpl,a
      0000E5 22               [24] 1112 	ret
                                   1113 ;------------------------------------------------------------
                                   1114 ;Allocation info for local variables in function 'GPIOPin_Toggle'
                                   1115 ;------------------------------------------------------------
                                   1116 ;GPIO_Pin                  Allocated with name '_GPIOPin_Toggle_GPIO_Pin_65536_25'
                                   1117 ;------------------------------------------------------------
                                   1118 ;	src/mc96f8x16_gpio.c:125: void GPIOPin_Toggle(OUTPUTPin_t GPIO_Pin)
                                   1119 ;	-----------------------------------------
                                   1120 ;	 function GPIOPin_Toggle
                                   1121 ;	-----------------------------------------
      0000E6                       1122 _GPIOPin_Toggle:
      0000E6 E5 82            [12] 1123 	mov	a,dpl
      0000E8 90r00r04         [24] 1124 	mov	dptr,#_GPIOPin_Toggle_GPIO_Pin_65536_25
      0000EB F0               [24] 1125 	movx	@dptr,a
                                   1126 ;	src/mc96f8x16_gpio.c:127: switch (GPIO_Pin)
      0000EC E0               [24] 1127 	movx	a,@dptr
      0000ED FF               [12] 1128 	mov  r7,a
      0000EE 24 FA            [12] 1129 	add	a,#0xff - 0x05
      0000F0 40 23            [24] 1130 	jc	00109$
      0000F2 EF               [12] 1131 	mov	a,r7
      0000F3 2F               [12] 1132 	add	a,r7
                                   1133 ;	src/mc96f8x16_gpio.c:129: case GPIO_LED1:
      0000F4 90r00rF8         [24] 1134 	mov	dptr,#00116$
      0000F7 73               [24] 1135 	jmp	@a+dptr
      0000F8                       1136 00116$:
      0000F8 80 0A            [24] 1137 	sjmp	00101$
      0000FA 80 0B            [24] 1138 	sjmp	00102$
      0000FC 80 0C            [24] 1139 	sjmp	00103$
      0000FE 80 0D            [24] 1140 	sjmp	00104$
      000100 80 0E            [24] 1141 	sjmp	00105$
      000102 80 0F            [24] 1142 	sjmp	00106$
      000104                       1143 00101$:
                                   1144 ;	src/mc96f8x16_gpio.c:130: P33 = !P33;
      000104 B2*1B            [12] 1145 	cpl	_P33
                                   1146 ;	src/mc96f8x16_gpio.c:131: break;
                                   1147 ;	src/mc96f8x16_gpio.c:132: case GPIO_LED2:
      000106 22               [24] 1148 	ret
      000107                       1149 00102$:
                                   1150 ;	src/mc96f8x16_gpio.c:133: P34 = !P34;
      000107 B2*1C            [12] 1151 	cpl	_P34
                                   1152 ;	src/mc96f8x16_gpio.c:134: break;
                                   1153 ;	src/mc96f8x16_gpio.c:135: case GPIO_LED3:
      000109 22               [24] 1154 	ret
      00010A                       1155 00103$:
                                   1156 ;	src/mc96f8x16_gpio.c:136: P35 = !P35;
      00010A B2*1D            [12] 1157 	cpl	_P35
                                   1158 ;	src/mc96f8x16_gpio.c:137: break;
                                   1159 ;	src/mc96f8x16_gpio.c:138: case GPIO_5V_CNTL:
      00010C 22               [24] 1160 	ret
      00010D                       1161 00104$:
                                   1162 ;	src/mc96f8x16_gpio.c:139: P36 = !P36;
      00010D B2*1E            [12] 1163 	cpl	_P36
                                   1164 ;	src/mc96f8x16_gpio.c:140: break;
                                   1165 ;	src/mc96f8x16_gpio.c:141: case GPIO_DCDC_EN:
      00010F 22               [24] 1166 	ret
      000110                       1167 00105$:
                                   1168 ;	src/mc96f8x16_gpio.c:142: P37 = !P37;
      000110 B2*1F            [12] 1169 	cpl	_P37
                                   1170 ;	src/mc96f8x16_gpio.c:143: break;
                                   1171 ;	src/mc96f8x16_gpio.c:144: case GPIO_COM_MODE:
      000112 22               [24] 1172 	ret
      000113                       1173 00106$:
                                   1174 ;	src/mc96f8x16_gpio.c:145: P14 = !P14;
      000113 B2*0C            [12] 1175 	cpl	_P14
                                   1176 ;	src/mc96f8x16_gpio.c:149: }
      000115                       1177 00109$:
                                   1178 ;	src/mc96f8x16_gpio.c:150: }
      000115 22               [24] 1179 	ret
                                   1180 	.area CSEG    (CODE)
                                   1181 	.area CONST   (CODE)
                                   1182 	.area XINIT   (CODE)
                                   1183 	.area CABS    (ABS,CODE)

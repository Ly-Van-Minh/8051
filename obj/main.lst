                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.14 #12827 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _I2C_Config
                                     13 	.globl _UART_Config
                                     14 	.globl _GPIOPin_Toggle
                                     15 	.globl _GPIOPin_Write
                                     16 	.globl _GPIO_Config
                                     17 	.globl _Delayms
                                     18 	.globl _SysTick_Init
                                     19 	.globl _SysClock_Config
                                     20 	.globl _P37
                                     21 	.globl _P36
                                     22 	.globl _P35
                                     23 	.globl _P34
                                     24 	.globl _P33
                                     25 	.globl _P32
                                     26 	.globl _P31
                                     27 	.globl _P30
                                     28 	.globl _P27
                                     29 	.globl _P26
                                     30 	.globl _P25
                                     31 	.globl _P24
                                     32 	.globl _P23
                                     33 	.globl _P22
                                     34 	.globl _P21
                                     35 	.globl _P20
                                     36 	.globl _P17
                                     37 	.globl _P16
                                     38 	.globl _P15
                                     39 	.globl _P14
                                     40 	.globl _P13
                                     41 	.globl _P12
                                     42 	.globl _P11
                                     43 	.globl _P10
                                     44 	.globl _P07
                                     45 	.globl _P06
                                     46 	.globl _P05
                                     47 	.globl _P04
                                     48 	.globl _P03
                                     49 	.globl _P02
                                     50 	.globl _P01
                                     51 	.globl _P00
                                     52 	.globl _EO
                                     53 	.globl _DPH1
                                     54 	.globl _DPL1
                                     55 	.globl _DPH
                                     56 	.globl _DPL
                                     57 	.globl _SP
                                     58 	.globl _PSW
                                     59 	.globl _B
                                     60 	.globl _ACC
                                     61 	.globl _FMCR
                                     62 	.globl _FIDR
                                     63 	.globl _FSADRL
                                     64 	.globl _FSADRM
                                     65 	.globl _FSADRH
                                     66 	.globl _I2CSCHR
                                     67 	.globl _I2CSCLR
                                     68 	.globl _I2CSDHR
                                     69 	.globl _I2CDR
                                     70 	.globl _I2CSAR1
                                     71 	.globl _I2CSAR0
                                     72 	.globl _I2CSR
                                     73 	.globl _I2CCR
                                     74 	.globl _UARTDR
                                     75 	.globl _UARTBD
                                     76 	.globl _UARTST
                                     77 	.globl _UARTCR3
                                     78 	.globl _UARTCR2
                                     79 	.globl _UARTCR1
                                     80 	.globl _SPISR
                                     81 	.globl _SPIDR
                                     82 	.globl _SPICR
                                     83 	.globl _ADWIFRH
                                     84 	.globl _ADWIFRL
                                     85 	.globl _ADWCRH
                                     86 	.globl _ADWCRL
                                     87 	.globl _ADWRCR3
                                     88 	.globl _ADWRCR2
                                     89 	.globl _ADWRCR1
                                     90 	.globl _ADWRCR0
                                     91 	.globl _ADCDRH
                                     92 	.globl _ADCDRL
                                     93 	.globl _ADCCRH
                                     94 	.globl _ADCCRL
                                     95 	.globl _BUZCR
                                     96 	.globl _BUZDR
                                     97 	.globl _T2BDRH
                                     98 	.globl _T2BDRL
                                     99 	.globl _T2ADRH
                                    100 	.globl _T2ADRL
                                    101 	.globl _T2CRH
                                    102 	.globl _T2CRL
                                    103 	.globl _T1BDRH
                                    104 	.globl _T1BDRL
                                    105 	.globl _T1ADRH
                                    106 	.globl _T1ADRL
                                    107 	.globl _T1CRH
                                    108 	.globl _T1CRL
                                    109 	.globl _T0CDR
                                    110 	.globl _T0DR
                                    111 	.globl _T0CNT
                                    112 	.globl _T0CR
                                    113 	.globl _WTCR
                                    114 	.globl _WTCNT
                                    115 	.globl _WTDR
                                    116 	.globl _WDTCR
                                    117 	.globl _WDTCNT
                                    118 	.globl _WDTDR
                                    119 	.globl _LVICR
                                    120 	.globl _LVRCR
                                    121 	.globl _PCON
                                    122 	.globl _RSTFR
                                    123 	.globl _BITCR
                                    124 	.globl _BITCNT
                                    125 	.globl _OSCCR
                                    126 	.globl _SCCR
                                    127 	.globl _EIPOL2
                                    128 	.globl _EIPOL1
                                    129 	.globl _EIPOL0H
                                    130 	.globl _EIPOL0L
                                    131 	.globl _EIFLAG1
                                    132 	.globl _EIFLAG0
                                    133 	.globl _IIFLAG
                                    134 	.globl _IP1
                                    135 	.globl _IP
                                    136 	.globl _IE3
                                    137 	.globl _IE2
                                    138 	.globl _IE1
                                    139 	.globl _IE
                                    140 	.globl _P3FSR
                                    141 	.globl _P2FSR
                                    142 	.globl _P1FSRH
                                    143 	.globl _P1FSRL
                                    144 	.globl _P0FSR
                                    145 	.globl _P3PU
                                    146 	.globl _P3OD
                                    147 	.globl _P3IO
                                    148 	.globl _P3
                                    149 	.globl _P2PU
                                    150 	.globl _P2OD
                                    151 	.globl _P2IO
                                    152 	.globl _P2
                                    153 	.globl _P12DB
                                    154 	.globl _P1PU
                                    155 	.globl _P1OD
                                    156 	.globl _P1IO
                                    157 	.globl _P1
                                    158 	.globl _P03DB
                                    159 	.globl _P0PU
                                    160 	.globl _P0OD
                                    161 	.globl _P0IO
                                    162 	.globl _P0
                                    163 	.globl _i
                                    164 	.globl _Buf
                                    165 ;--------------------------------------------------------
                                    166 ; special function registers
                                    167 ;--------------------------------------------------------
                                    168 	.area RSEG    (ABS,DATA)
      000000                        169 	.org 0x0000
      000000                        170 _P0::
      000000                        171 	.ds 1
      000001                        172 _P0IO::
      000001                        173 	.ds 1
      000002                        174 _P0OD::
      000002                        175 	.ds 1
      000003                        176 _P0PU::
      000003                        177 	.ds 1
      000004                        178 _P03DB::
      000004                        179 	.ds 1
      000005                        180 _P1::
      000005                        181 	.ds 1
      000006                        182 _P1IO::
      000006                        183 	.ds 1
      000007                        184 _P1OD::
      000007                        185 	.ds 1
      000008                        186 _P1PU::
      000008                        187 	.ds 1
      000009                        188 _P12DB::
      000009                        189 	.ds 1
      00000A                        190 _P2::
      00000A                        191 	.ds 1
      00000B                        192 _P2IO::
      00000B                        193 	.ds 1
      00000C                        194 _P2OD::
      00000C                        195 	.ds 1
      00000D                        196 _P2PU::
      00000D                        197 	.ds 1
      00000E                        198 _P3::
      00000E                        199 	.ds 1
      00000F                        200 _P3IO::
      00000F                        201 	.ds 1
      000010                        202 _P3OD::
      000010                        203 	.ds 1
      000011                        204 _P3PU::
      000011                        205 	.ds 1
      000012                        206 _P0FSR::
      000012                        207 	.ds 1
      000013                        208 _P1FSRL::
      000013                        209 	.ds 1
      000014                        210 _P1FSRH::
      000014                        211 	.ds 1
      000015                        212 _P2FSR::
      000015                        213 	.ds 1
      000016                        214 _P3FSR::
      000016                        215 	.ds 1
      000017                        216 _IE::
      000017                        217 	.ds 1
      000018                        218 _IE1::
      000018                        219 	.ds 1
      000019                        220 _IE2::
      000019                        221 	.ds 1
      00001A                        222 _IE3::
      00001A                        223 	.ds 1
      00001B                        224 _IP::
      00001B                        225 	.ds 1
      00001C                        226 _IP1::
      00001C                        227 	.ds 1
      00001D                        228 _IIFLAG::
      00001D                        229 	.ds 1
      00001E                        230 _EIFLAG0::
      00001E                        231 	.ds 1
      00001F                        232 _EIFLAG1::
      00001F                        233 	.ds 1
      000020                        234 _EIPOL0L::
      000020                        235 	.ds 1
      000021                        236 _EIPOL0H::
      000021                        237 	.ds 1
      000022                        238 _EIPOL1::
      000022                        239 	.ds 1
      000023                        240 _EIPOL2::
      000023                        241 	.ds 1
      000024                        242 _SCCR::
      000024                        243 	.ds 1
      000025                        244 _OSCCR::
      000025                        245 	.ds 1
      000026                        246 _BITCNT::
      000026                        247 	.ds 1
      000027                        248 _BITCR::
      000027                        249 	.ds 1
      000028                        250 _RSTFR::
      000028                        251 	.ds 1
      000029                        252 _PCON::
      000029                        253 	.ds 1
      00002A                        254 _LVRCR::
      00002A                        255 	.ds 1
      00002B                        256 _LVICR::
      00002B                        257 	.ds 1
      00002C                        258 _WDTDR::
      00002C                        259 	.ds 1
      00002D                        260 _WDTCNT::
      00002D                        261 	.ds 1
      00002E                        262 _WDTCR::
      00002E                        263 	.ds 1
      00002F                        264 _WTDR::
      00002F                        265 	.ds 1
      000030                        266 _WTCNT::
      000030                        267 	.ds 1
      000031                        268 _WTCR::
      000031                        269 	.ds 1
      000032                        270 _T0CR::
      000032                        271 	.ds 1
      000033                        272 _T0CNT::
      000033                        273 	.ds 1
      000034                        274 _T0DR::
      000034                        275 	.ds 1
      000035                        276 _T0CDR::
      000035                        277 	.ds 1
      000036                        278 _T1CRL::
      000036                        279 	.ds 1
      000037                        280 _T1CRH::
      000037                        281 	.ds 1
      000038                        282 _T1ADRL::
      000038                        283 	.ds 1
      000039                        284 _T1ADRH::
      000039                        285 	.ds 1
      00003A                        286 _T1BDRL::
      00003A                        287 	.ds 1
      00003B                        288 _T1BDRH::
      00003B                        289 	.ds 1
      00003C                        290 _T2CRL::
      00003C                        291 	.ds 1
      00003D                        292 _T2CRH::
      00003D                        293 	.ds 1
      00003E                        294 _T2ADRL::
      00003E                        295 	.ds 1
      00003F                        296 _T2ADRH::
      00003F                        297 	.ds 1
      000040                        298 _T2BDRL::
      000040                        299 	.ds 1
      000041                        300 _T2BDRH::
      000041                        301 	.ds 1
      000042                        302 _BUZDR::
      000042                        303 	.ds 1
      000043                        304 _BUZCR::
      000043                        305 	.ds 1
      000044                        306 _ADCCRL::
      000044                        307 	.ds 1
      000045                        308 _ADCCRH::
      000045                        309 	.ds 1
      000046                        310 _ADCDRL::
      000046                        311 	.ds 1
      000047                        312 _ADCDRH::
      000047                        313 	.ds 1
      000048                        314 _ADWRCR0::
      000048                        315 	.ds 1
      000049                        316 _ADWRCR1::
      000049                        317 	.ds 1
      00004A                        318 _ADWRCR2::
      00004A                        319 	.ds 1
      00004B                        320 _ADWRCR3::
      00004B                        321 	.ds 1
      00004C                        322 _ADWCRL::
      00004C                        323 	.ds 1
      00004D                        324 _ADWCRH::
      00004D                        325 	.ds 1
      00004E                        326 _ADWIFRL::
      00004E                        327 	.ds 1
      00004F                        328 _ADWIFRH::
      00004F                        329 	.ds 1
      000050                        330 _SPICR::
      000050                        331 	.ds 1
      000051                        332 _SPIDR::
      000051                        333 	.ds 1
      000052                        334 _SPISR::
      000052                        335 	.ds 1
      000053                        336 _UARTCR1::
      000053                        337 	.ds 1
      000054                        338 _UARTCR2::
      000054                        339 	.ds 1
      000055                        340 _UARTCR3::
      000055                        341 	.ds 1
      000056                        342 _UARTST::
      000056                        343 	.ds 1
      000057                        344 _UARTBD::
      000057                        345 	.ds 1
      000058                        346 _UARTDR::
      000058                        347 	.ds 1
      000059                        348 _I2CCR::
      000059                        349 	.ds 1
      00005A                        350 _I2CSR::
      00005A                        351 	.ds 1
      00005B                        352 _I2CSAR0::
      00005B                        353 	.ds 1
      00005C                        354 _I2CSAR1::
      00005C                        355 	.ds 1
      00005D                        356 _I2CDR::
      00005D                        357 	.ds 1
      00005E                        358 _I2CSDHR::
      00005E                        359 	.ds 1
      00005F                        360 _I2CSCLR::
      00005F                        361 	.ds 1
      000060                        362 _I2CSCHR::
      000060                        363 	.ds 1
      000061                        364 _FSADRH::
      000061                        365 	.ds 1
      000062                        366 _FSADRM::
      000062                        367 	.ds 1
      000063                        368 _FSADRL::
      000063                        369 	.ds 1
      000064                        370 _FIDR::
      000064                        371 	.ds 1
      000065                        372 _FMCR::
      000065                        373 	.ds 1
      000066                        374 _ACC::
      000066                        375 	.ds 1
      000067                        376 _B::
      000067                        377 	.ds 1
      000068                        378 _PSW::
      000068                        379 	.ds 1
      000069                        380 _SP::
      000069                        381 	.ds 1
      00006A                        382 _DPL::
      00006A                        383 	.ds 1
      00006B                        384 _DPH::
      00006B                        385 	.ds 1
      00006C                        386 _DPL1::
      00006C                        387 	.ds 1
      00006D                        388 _DPH1::
      00006D                        389 	.ds 1
      00006E                        390 _EO::
      00006E                        391 	.ds 1
                                    392 ;--------------------------------------------------------
                                    393 ; special function bits
                                    394 ;--------------------------------------------------------
                                    395 	.area RSEG    (ABS,DATA)
      000000                        396 	.org 0x0000
      000000                        397 _P00::
      000000                        398 	.ds 1
      000001                        399 _P01::
      000001                        400 	.ds 1
      000002                        401 _P02::
      000002                        402 	.ds 1
      000003                        403 _P03::
      000003                        404 	.ds 1
      000004                        405 _P04::
      000004                        406 	.ds 1
      000005                        407 _P05::
      000005                        408 	.ds 1
      000006                        409 _P06::
      000006                        410 	.ds 1
      000007                        411 _P07::
      000007                        412 	.ds 1
      000008                        413 _P10::
      000008                        414 	.ds 1
      000009                        415 _P11::
      000009                        416 	.ds 1
      00000A                        417 _P12::
      00000A                        418 	.ds 1
      00000B                        419 _P13::
      00000B                        420 	.ds 1
      00000C                        421 _P14::
      00000C                        422 	.ds 1
      00000D                        423 _P15::
      00000D                        424 	.ds 1
      00000E                        425 _P16::
      00000E                        426 	.ds 1
      00000F                        427 _P17::
      00000F                        428 	.ds 1
      000010                        429 _P20::
      000010                        430 	.ds 1
      000011                        431 _P21::
      000011                        432 	.ds 1
      000012                        433 _P22::
      000012                        434 	.ds 1
      000013                        435 _P23::
      000013                        436 	.ds 1
      000014                        437 _P24::
      000014                        438 	.ds 1
      000015                        439 _P25::
      000015                        440 	.ds 1
      000016                        441 _P26::
      000016                        442 	.ds 1
      000017                        443 _P27::
      000017                        444 	.ds 1
      000018                        445 _P30::
      000018                        446 	.ds 1
      000019                        447 _P31::
      000019                        448 	.ds 1
      00001A                        449 _P32::
      00001A                        450 	.ds 1
      00001B                        451 _P33::
      00001B                        452 	.ds 1
      00001C                        453 _P34::
      00001C                        454 	.ds 1
      00001D                        455 _P35::
      00001D                        456 	.ds 1
      00001E                        457 _P36::
      00001E                        458 	.ds 1
      00001F                        459 _P37::
      00001F                        460 	.ds 1
                                    461 ;--------------------------------------------------------
                                    462 ; overlayable register banks
                                    463 ;--------------------------------------------------------
                                    464 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        465 	.ds 8
                                    466 ;--------------------------------------------------------
                                    467 ; internal ram data
                                    468 ;--------------------------------------------------------
                                    469 	.area DSEG    (DATA)
                                    470 ;--------------------------------------------------------
                                    471 ; overlayable items in internal ram 
                                    472 ;--------------------------------------------------------
                                    473 ;--------------------------------------------------------
                                    474 ; Stack segment in internal ram 
                                    475 ;--------------------------------------------------------
                                    476 	.area	SSEG
      000000                        477 __start__stack:
      000000                        478 	.ds	1
                                    479 
                                    480 ;--------------------------------------------------------
                                    481 ; indirectly addressable internal ram data
                                    482 ;--------------------------------------------------------
                                    483 	.area ISEG    (DATA)
                                    484 ;--------------------------------------------------------
                                    485 ; absolute internal ram data
                                    486 ;--------------------------------------------------------
                                    487 	.area IABS    (ABS,DATA)
                                    488 	.area IABS    (ABS,DATA)
                                    489 ;--------------------------------------------------------
                                    490 ; bit data
                                    491 ;--------------------------------------------------------
                                    492 	.area BSEG    (BIT)
                                    493 ;--------------------------------------------------------
                                    494 ; paged external ram data
                                    495 ;--------------------------------------------------------
                                    496 	.area PSEG    (PAG,XDATA)
                                    497 ;--------------------------------------------------------
                                    498 ; external ram data
                                    499 ;--------------------------------------------------------
                                    500 	.area XSEG    (XDATA)
      000000                        501 _Buf::
      000000                        502 	.ds 1
      000001                        503 _main_uart_65536_58:
      000001                        504 	.ds 4
      000005                        505 _main_i2c_65536_58:
      000005                        506 	.ds 6
                                    507 ;--------------------------------------------------------
                                    508 ; absolute external ram data
                                    509 ;--------------------------------------------------------
                                    510 	.area XABS    (ABS,XDATA)
                                    511 ;--------------------------------------------------------
                                    512 ; external initialized ram data
                                    513 ;--------------------------------------------------------
                                    514 	.area XISEG   (XDATA)
      000000                        515 _i::
      000000                        516 	.ds 2
                                    517 	.area HOME    (CODE)
                                    518 	.area GSINIT0 (CODE)
                                    519 	.area GSINIT1 (CODE)
                                    520 	.area GSINIT2 (CODE)
                                    521 	.area GSINIT3 (CODE)
                                    522 	.area GSINIT4 (CODE)
                                    523 	.area GSINIT5 (CODE)
                                    524 	.area GSINIT  (CODE)
                                    525 	.area GSFINAL (CODE)
                                    526 	.area CSEG    (CODE)
                                    527 ;--------------------------------------------------------
                                    528 ; interrupt vector 
                                    529 ;--------------------------------------------------------
                                    530 	.area HOME    (CODE)
      000000                        531 __interrupt_vect:
      000000 02r00r00         [24]  532 	ljmp	__sdcc_gsinit_startup
                                    533 ;--------------------------------------------------------
                                    534 ; global & static initialisations
                                    535 ;--------------------------------------------------------
                                    536 	.area HOME    (CODE)
                                    537 	.area GSINIT  (CODE)
                                    538 	.area GSFINAL (CODE)
                                    539 	.area GSINIT  (CODE)
                                    540 	.globl __sdcc_gsinit_startup
                                    541 	.globl __sdcc_program_startup
                                    542 	.globl __start__stack
                                    543 	.globl __mcs51_genXINIT
                                    544 	.globl __mcs51_genXRAMCLEAR
                                    545 	.globl __mcs51_genRAMCLEAR
                                    546 ;	./inc/mc96f8x16.h:37: sfr			P0			= 0x80;			// P0 Data Register
      000000 75*00 80         [24]  547 	mov	_P0,#0x80
                                    548 ;	./inc/mc96f8x16.h:47: sfr			P0IO		= 0xA1;			// P0 Direction Register
      000003 75*01 A1         [24]  549 	mov	_P0IO,#0xa1
                                    550 ;	./inc/mc96f8x16.h:48: sfr			P0OD		= 0x91;			// P0 Open-drain Selection Register
      000006 75*02 91         [24]  551 	mov	_P0OD,#0x91
                                    552 ;	./inc/mc96f8x16.h:49: sfr			P0PU		= 0xAC;			// P0 Pull-up Resistor Selection Register
      000009 75*03 AC         [24]  553 	mov	_P0PU,#0xac
                                    554 ;	./inc/mc96f8x16.h:50: sfr			P03DB		= 0xDE;			// P0/P3 Debounce Enable Register
      00000C 75*04 DE         [24]  555 	mov	_P03DB,#0xde
                                    556 ;	./inc/mc96f8x16.h:52: sfr			P1			= 0x88;			// P1 Data Register
      00000F 75*05 88         [24]  557 	mov	_P1,#0x88
                                    558 ;	./inc/mc96f8x16.h:62: sfr			P1IO		= 0xB1;			// P1 Direction Register
      000012 75*06 B1         [24]  559 	mov	_P1IO,#0xb1
                                    560 ;	./inc/mc96f8x16.h:63: sfr			P1OD		= 0x92;			// P1 Open-drain Selection Register
      000015 75*07 92         [24]  561 	mov	_P1OD,#0x92
                                    562 ;	./inc/mc96f8x16.h:64: sfr			P1PU		= 0xAD;			// P1 Pull-up Resistor Selection Register
      000018 75*08 AD         [24]  563 	mov	_P1PU,#0xad
                                    564 ;	./inc/mc96f8x16.h:65: sfr			P12DB		= 0xDF;			// P1/P2 Debounce Enable Register
      00001B 75*09 DF         [24]  565 	mov	_P12DB,#0xdf
                                    566 ;	./inc/mc96f8x16.h:67: sfr			P2			= 0x90;			// P2 Data Register
      00001E 75*0A 90         [24]  567 	mov	_P2,#0x90
                                    568 ;	./inc/mc96f8x16.h:77: sfr			P2IO		= 0xB9;			// P2 Direction Register
      000021 75*0B B9         [24]  569 	mov	_P2IO,#0xb9
                                    570 ;	./inc/mc96f8x16.h:78: sfr			P2OD		= 0x93;			// P2 Open-drain Selection Register
      000024 75*0C 93         [24]  571 	mov	_P2OD,#0x93
                                    572 ;	./inc/mc96f8x16.h:79: sfr			P2PU		= 0xAE;			// P2 Pull-up Resistor Selection Register
      000027 75*0D AE         [24]  573 	mov	_P2PU,#0xae
                                    574 ;	./inc/mc96f8x16.h:81: sfr			P3			= 0x98;			// P3 Data Register
      00002A 75*0E 98         [24]  575 	mov	_P3,#0x98
                                    576 ;	./inc/mc96f8x16.h:91: sfr			P3IO		= 0xC1;			// P3 Direction Register
      00002D 75*0F C1         [24]  577 	mov	_P3IO,#0xc1
                                    578 ;	./inc/mc96f8x16.h:92: sfr			P3OD		= 0x94;			// P3 Open-drain Selection Register
      000030 75*10 94         [24]  579 	mov	_P3OD,#0x94
                                    580 ;	./inc/mc96f8x16.h:93: sfr			P3PU		= 0xAF;			// P3 Pull-up Resistor Selection Register
      000033 75*11 AF         [24]  581 	mov	_P3PU,#0xaf
                                    582 ;	./inc/mc96f8x16.h:95: sfr			P0FSR		= 0xD3;			//P0 Function Selection Register
      000036 75*12 D3         [24]  583 	mov	_P0FSR,#0xd3
                                    584 ;	./inc/mc96f8x16.h:96: sfr			P1FSRL		= 0xD4;			//P1 Function Selection Low Register
      000039 75*13 D4         [24]  585 	mov	_P1FSRL,#0xd4
                                    586 ;	./inc/mc96f8x16.h:97: sfr			P1FSRH		= 0xD5;			//P1 Function Selection High Register
      00003C 75*14 D5         [24]  587 	mov	_P1FSRH,#0xd5
                                    588 ;	./inc/mc96f8x16.h:98: sfr			P2FSR		= 0xD6;			//P2 Function Selection Register
      00003F 75*15 D6         [24]  589 	mov	_P2FSR,#0xd6
                                    590 ;	./inc/mc96f8x16.h:99: sfr			P3FSR		= 0xD7;			//P3 Function Selection Register
      000042 75*16 D7         [24]  591 	mov	_P3FSR,#0xd7
                                    592 ;	./inc/mc96f8x16.h:102: sfr			IE			= 0xA8;			// Interrupt Enable Register 0
      000045 75*17 A8         [24]  593 	mov	_IE,#0xa8
                                    594 ;	./inc/mc96f8x16.h:103: sfr			IE1			= 0xA9;			// Interrupt Enable Register 1
      000048 75*18 A9         [24]  595 	mov	_IE1,#0xa9
                                    596 ;	./inc/mc96f8x16.h:104: sfr			IE2			= 0xAA;			// Interrupt Enable Register 2
      00004B 75*19 AA         [24]  597 	mov	_IE2,#0xaa
                                    598 ;	./inc/mc96f8x16.h:105: sfr			IE3			= 0xAB;			// Interrupt Enable Register 3
      00004E 75*1A AB         [24]  599 	mov	_IE3,#0xab
                                    600 ;	./inc/mc96f8x16.h:106: sfr			IP			= 0xB8;			// Interrupt Priority Register 0
      000051 75*1B B8         [24]  601 	mov	_IP,#0xb8
                                    602 ;	./inc/mc96f8x16.h:107: sfr			IP1			= 0xF8;			// Interrupt Priority Register 1
      000054 75*1C F8         [24]  603 	mov	_IP1,#0xf8
                                    604 ;	./inc/mc96f8x16.h:108: sfr			IIFLAG		= 0xA0;			// Internal Interrupt Flag Register
      000057 75*1D A0         [24]  605 	mov	_IIFLAG,#0xa0
                                    606 ;	./inc/mc96f8x16.h:109: sfr			EIFLAG0		= 0xC0;			// External Interrupt Flag 0 Register
      00005A 75*1E C0         [24]  607 	mov	_EIFLAG0,#0xc0
                                    608 ;	./inc/mc96f8x16.h:110: sfr			EIFLAG1		= 0xB0;			// External Interrupt Flag 1 Register
      00005D 75*1F B0         [24]  609 	mov	_EIFLAG1,#0xb0
                                    610 ;	./inc/mc96f8x16.h:111: sfr			EIPOL0L		= 0xA4;			// External Interrupt Polarity 0 Low Register
      000060 75*20 A4         [24]  611 	mov	_EIPOL0L,#0xa4
                                    612 ;	./inc/mc96f8x16.h:112: sfr			EIPOL0H		= 0xA5;			// External Interrupt Polarity 0 High Register
      000063 75*21 A5         [24]  613 	mov	_EIPOL0H,#0xa5
                                    614 ;	./inc/mc96f8x16.h:113: sfr			EIPOL1		= 0xA6;			// External Interrupt Polarity 1 Register
      000066 75*22 A6         [24]  615 	mov	_EIPOL1,#0xa6
                                    616 ;	./inc/mc96f8x16.h:114: sfr			EIPOL2		= 0xA7;			// External Interrupt Polarity 2 Register
      000069 75*23 A7         [24]  617 	mov	_EIPOL2,#0xa7
                                    618 ;	./inc/mc96f8x16.h:117: sfr			SCCR		= 0x8A;			// System Clock Control Register
      00006C 75*24 8A         [24]  619 	mov	_SCCR,#0x8a
                                    620 ;	./inc/mc96f8x16.h:118: sfr			OSCCR		= 0xC8;			// Oscillator Control Register
      00006F 75*25 C8         [24]  621 	mov	_OSCCR,#0xc8
                                    622 ;	./inc/mc96f8x16.h:119: sfr			BITCNT		= 0x8C;			// Basic Interval Timer Counter Register
      000072 75*26 8C         [24]  623 	mov	_BITCNT,#0x8c
                                    624 ;	./inc/mc96f8x16.h:120: sfr			BITCR		= 0x8B;			// Basic Interval Timer Control Register
      000075 75*27 8B         [24]  625 	mov	_BITCR,#0x8b
                                    626 ;	./inc/mc96f8x16.h:121: sfr			RSTFR		= 0xE8;			// Reset Flag Register
      000078 75*28 E8         [24]  627 	mov	_RSTFR,#0xe8
                                    628 ;	./inc/mc96f8x16.h:122: sfr			PCON		= 0x87;			// Power Control Register
      00007B 75*29 87         [24]  629 	mov	_PCON,#0x87
                                    630 ;	./inc/mc96f8x16.h:123: sfr			LVRCR		= 0xD8;			// Low Voltage Reset Control Register
      00007E 75*2A D8         [24]  631 	mov	_LVRCR,#0xd8
                                    632 ;	./inc/mc96f8x16.h:124: sfr			LVICR		= 0x86;			// Low Voltage Indicator Control Register
      000081 75*2B 86         [24]  633 	mov	_LVICR,#0x86
                                    634 ;	./inc/mc96f8x16.h:127: sfr			WDTDR		= 0x8E;			// Watch Dog Timer Data Register
      000084 75*2C 8E         [24]  635 	mov	_WDTDR,#0x8e
                                    636 ;	./inc/mc96f8x16.h:128: sfr			WDTCNT		= 0x8E;			// Watch Dog Timer Counter Register
      000087 75*2D 8E         [24]  637 	mov	_WDTCNT,#0x8e
                                    638 ;	./inc/mc96f8x16.h:129: sfr			WDTCR		= 0x8D;			// Watch Dog Timer Control Register
      00008A 75*2E 8D         [24]  639 	mov	_WDTCR,#0x8d
                                    640 ;	./inc/mc96f8x16.h:132: sfr			WTDR		= 0x89;			// Watch Timer Data Register
      00008D 75*2F 89         [24]  641 	mov	_WTDR,#0x89
                                    642 ;	./inc/mc96f8x16.h:133: sfr			WTCNT		= 0x89;			// Watch Timer Counter Register
      000090 75*30 89         [24]  643 	mov	_WTCNT,#0x89
                                    644 ;	./inc/mc96f8x16.h:134: sfr			WTCR		= 0x96;			// Watch Timer Control Register
      000093 75*31 96         [24]  645 	mov	_WTCR,#0x96
                                    646 ;	./inc/mc96f8x16.h:137: sfr			T0CR		= 0xB2;			// Timer 0 Control Register
      000096 75*32 B2         [24]  647 	mov	_T0CR,#0xb2
                                    648 ;	./inc/mc96f8x16.h:138: sfr			T0CNT		= 0xB3;			// Timer 0 Counter Register
      000099 75*33 B3         [24]  649 	mov	_T0CNT,#0xb3
                                    650 ;	./inc/mc96f8x16.h:139: sfr			T0DR		= 0xB4;			// Timer 0 Data Register
      00009C 75*34 B4         [24]  651 	mov	_T0DR,#0xb4
                                    652 ;	./inc/mc96f8x16.h:140: sfr			T0CDR		= 0xB4;			// Timer 0 Capture Data Register
      00009F 75*35 B4         [24]  653 	mov	_T0CDR,#0xb4
                                    654 ;	./inc/mc96f8x16.h:146: sfr			T1CRL		= 0xBA;			// Timer 1 Control Low Register
      0000A2 75*36 BA         [24]  655 	mov	_T1CRL,#0xba
                                    656 ;	./inc/mc96f8x16.h:147: sfr			T1CRH		= 0xBB;			// Timer 1 Control High Register
      0000A5 75*37 BB         [24]  657 	mov	_T1CRH,#0xbb
                                    658 ;	./inc/mc96f8x16.h:148: sfr			T1ADRL		= 0xBC;			// Timer 1 A Data Low Register
      0000A8 75*38 BC         [24]  659 	mov	_T1ADRL,#0xbc
                                    660 ;	./inc/mc96f8x16.h:149: sfr			T1ADRH		= 0xBD;			// Timer 1 A Data High Register
      0000AB 75*39 BD         [24]  661 	mov	_T1ADRH,#0xbd
                                    662 ;	./inc/mc96f8x16.h:150: sfr			T1BDRL		= 0xBE;			// Timer 1 B Data Low Register
      0000AE 75*3A BE         [24]  663 	mov	_T1BDRL,#0xbe
                                    664 ;	./inc/mc96f8x16.h:151: sfr			T1BDRH		= 0xBF;			// Timer 1 B Data High Register
      0000B1 75*3B BF         [24]  665 	mov	_T1BDRH,#0xbf
                                    666 ;	./inc/mc96f8x16.h:154: sfr			T2CRL		= 0xC2;			// Timer 2 Control Low Register
      0000B4 75*3C C2         [24]  667 	mov	_T2CRL,#0xc2
                                    668 ;	./inc/mc96f8x16.h:155: sfr			T2CRH		= 0xC3;			// Timer 2 Control High Register
      0000B7 75*3D C3         [24]  669 	mov	_T2CRH,#0xc3
                                    670 ;	./inc/mc96f8x16.h:156: sfr			T2ADRL		= 0xC4;			// Timer 2 A Data Low Register
      0000BA 75*3E C4         [24]  671 	mov	_T2ADRL,#0xc4
                                    672 ;	./inc/mc96f8x16.h:157: sfr			T2ADRH		= 0xC5;			// Timer 2 A Data High Register
      0000BD 75*3F C5         [24]  673 	mov	_T2ADRH,#0xc5
                                    674 ;	./inc/mc96f8x16.h:158: sfr			T2BDRL		= 0xC6;			// Timer 2 B Data Low Register
      0000C0 75*40 C6         [24]  675 	mov	_T2BDRL,#0xc6
                                    676 ;	./inc/mc96f8x16.h:159: sfr			T2BDRH		= 0xC7;			// Timer 2 B Data High Register
      0000C3 75*41 C7         [24]  677 	mov	_T2BDRH,#0xc7
                                    678 ;	./inc/mc96f8x16.h:162: sfr			BUZDR		= 0x8F;			// BUZZER Data Register
      0000C6 75*42 8F         [24]  679 	mov	_BUZDR,#0x8f
                                    680 ;	./inc/mc96f8x16.h:163: sfr			BUZCR		= 0x97;			// BUZZER Control Register
      0000C9 75*43 97         [24]  681 	mov	_BUZCR,#0x97
                                    682 ;	./inc/mc96f8x16.h:166: sfr			ADCCRL		= 0x9C;			// A/D Converter Control Low Register
      0000CC 75*44 9C         [24]  683 	mov	_ADCCRL,#0x9c
                                    684 ;	./inc/mc96f8x16.h:167: sfr			ADCCRH		= 0x9D;			// A/D Converter Control High Register
      0000CF 75*45 9D         [24]  685 	mov	_ADCCRH,#0x9d
                                    686 ;	./inc/mc96f8x16.h:168: sfr			ADCDRL		= 0x9E;			// A/D Converter Data Low Register
      0000D2 75*46 9E         [24]  687 	mov	_ADCDRL,#0x9e
                                    688 ;	./inc/mc96f8x16.h:169: sfr			ADCDRH		= 0x9F;			// A/D Converter Data High Register
      0000D5 75*47 9F         [24]  689 	mov	_ADCDRH,#0x9f
                                    690 ;	./inc/mc96f8x16.h:171: sfr			ADWRCR0		= 0xF2;			// ADC Wake-up Resistor Control Register 0
      0000D8 75*48 F2         [24]  691 	mov	_ADWRCR0,#0xf2
                                    692 ;	./inc/mc96f8x16.h:172: sfr			ADWRCR1		= 0xF3;			// ADC Wake-up Resistor Control Register 1
      0000DB 75*49 F3         [24]  693 	mov	_ADWRCR1,#0xf3
                                    694 ;	./inc/mc96f8x16.h:173: sfr			ADWRCR2		= 0xF4;			// ADC Wake-up Resistor Control Register 2
      0000DE 75*4A F4         [24]  695 	mov	_ADWRCR2,#0xf4
                                    696 ;	./inc/mc96f8x16.h:174: sfr			ADWRCR3		= 0xF5;			// ADC Wake-up Resistor Control Register 3
      0000E1 75*4B F5         [24]  697 	mov	_ADWRCR3,#0xf5
                                    698 ;	./inc/mc96f8x16.h:175: sfr			ADWCRL		= 0xF6;			// ADC Wake-up Control Low Register
      0000E4 75*4C F6         [24]  699 	mov	_ADWCRL,#0xf6
                                    700 ;	./inc/mc96f8x16.h:176: sfr			ADWCRH		= 0xF7;			// ADC Wake-up Control High Register
      0000E7 75*4D F7         [24]  701 	mov	_ADWCRH,#0xf7
                                    702 ;	./inc/mc96f8x16.h:177: sfr			ADWIFRL		= 0xDC;			// ADC Wake-up Interrupt Flag Low Register
      0000EA 75*4E DC         [24]  703 	mov	_ADWIFRL,#0xdc
                                    704 ;	./inc/mc96f8x16.h:178: sfr			ADWIFRH		= 0xDD;			// ADC Wake-up Interrupt Flag High Register
      0000ED 75*4F DD         [24]  705 	mov	_ADWIFRH,#0xdd
                                    706 ;	./inc/mc96f8x16.h:181: sfr			SPICR		= 0xB5;			// SPI Control Register
      0000F0 75*50 B5         [24]  707 	mov	_SPICR,#0xb5
                                    708 ;	./inc/mc96f8x16.h:182: sfr			SPIDR		= 0xB6;			// SPI Data Register
      0000F3 75*51 B6         [24]  709 	mov	_SPIDR,#0xb6
                                    710 ;	./inc/mc96f8x16.h:183: sfr			SPISR		= 0xB7;			// SPI Status Register
      0000F6 75*52 B7         [24]  711 	mov	_SPISR,#0xb7
                                    712 ;	./inc/mc96f8x16.h:186: sfr			UARTCR1		= 0xE2;			// UART Control Register 1
      0000F9 75*53 E2         [24]  713 	mov	_UARTCR1,#0xe2
                                    714 ;	./inc/mc96f8x16.h:187: sfr			UARTCR2		= 0xE3;			// UART Control Register 2
      0000FC 75*54 E3         [24]  715 	mov	_UARTCR2,#0xe3
                                    716 ;	./inc/mc96f8x16.h:188: sfr			UARTCR3		= 0xE4;			// UART Control Register 3
      0000FF 75*55 E4         [24]  717 	mov	_UARTCR3,#0xe4
                                    718 ;	./inc/mc96f8x16.h:189: sfr			UARTST		= 0xE5;			// UART Status Register
      000102 75*56 E5         [24]  719 	mov	_UARTST,#0xe5
                                    720 ;	./inc/mc96f8x16.h:190: sfr			UARTBD		= 0xE6;			// UART BaudRate Register
      000105 75*57 E6         [24]  721 	mov	_UARTBD,#0xe6
                                    722 ;	./inc/mc96f8x16.h:191: sfr			UARTDR		= 0xE7;			// UART Data Register
      000108 75*58 E7         [24]  723 	mov	_UARTDR,#0xe7
                                    724 ;	./inc/mc96f8x16.h:194: sfr			I2CCR		= 0xE9;			// I2C Control Register
      00010B 75*59 E9         [24]  725 	mov	_I2CCR,#0xe9
                                    726 ;	./inc/mc96f8x16.h:195: sfr			I2CSR		= 0xEA;			// I2C Status Register
      00010E 75*5A EA         [24]  727 	mov	_I2CSR,#0xea
                                    728 ;	./inc/mc96f8x16.h:196: sfr			I2CSAR0		= 0xEB;			// I2C Slave Address 0 Register
      000111 75*5B EB         [24]  729 	mov	_I2CSAR0,#0xeb
                                    730 ;	./inc/mc96f8x16.h:197: sfr			I2CSAR1		= 0xF1;			// I2C Slave Address 1 Register
      000114 75*5C F1         [24]  731 	mov	_I2CSAR1,#0xf1
                                    732 ;	./inc/mc96f8x16.h:198: sfr			I2CDR		= 0xEC;			// I2C Data Register
      000117 75*5D EC         [24]  733 	mov	_I2CDR,#0xec
                                    734 ;	./inc/mc96f8x16.h:199: sfr			I2CSDHR		= 0xED;			// I2C SDA Hold Time Register
      00011A 75*5E ED         [24]  735 	mov	_I2CSDHR,#0xed
                                    736 ;	./inc/mc96f8x16.h:200: sfr			I2CSCLR		= 0xEE;			// I2C SCL Low Period Register
      00011D 75*5F EE         [24]  737 	mov	_I2CSCLR,#0xee
                                    738 ;	./inc/mc96f8x16.h:201: sfr			I2CSCHR		= 0xEF;			// I2C SCL High Period Register
      000120 75*60 EF         [24]  739 	mov	_I2CSCHR,#0xef
                                    740 ;	./inc/mc96f8x16.h:204: sfr			FSADRH		= 0xFA;			// Flash Sector Address High Register
      000123 75*61 FA         [24]  741 	mov	_FSADRH,#0xfa
                                    742 ;	./inc/mc96f8x16.h:205: sfr			FSADRM		= 0xFB;			// Flash Sector Address Middle Register
      000126 75*62 FB         [24]  743 	mov	_FSADRM,#0xfb
                                    744 ;	./inc/mc96f8x16.h:206: sfr			FSADRL		= 0xFC;			// Flash Sector Address Low Register
      000129 75*63 FC         [24]  745 	mov	_FSADRL,#0xfc
                                    746 ;	./inc/mc96f8x16.h:207: sfr			FIDR		= 0xFD;			// Flash Identification Register
      00012C 75*64 FD         [24]  747 	mov	_FIDR,#0xfd
                                    748 ;	./inc/mc96f8x16.h:208: sfr			FMCR		= 0xFE;			// Flash Mode Control Register
      00012F 75*65 FE         [24]  749 	mov	_FMCR,#0xfe
                                    750 ;	./inc/mc96f8x16.h:210: sfr			ACC			= 0xE0;
      000132 75*66 E0         [24]  751 	mov	_ACC,#0xe0
                                    752 ;	./inc/mc96f8x16.h:211: sfr			B			= 0xF0;
      000135 75*67 F0         [24]  753 	mov	_B,#0xf0
                                    754 ;	./inc/mc96f8x16.h:212: sfr			PSW			= 0xD0;
      000138 75*68 D0         [24]  755 	mov	_PSW,#0xd0
                                    756 ;	./inc/mc96f8x16.h:213: sfr			SP			= 0x81;
      00013B 75*69 81         [24]  757 	mov	_SP,#0x81
                                    758 ;	./inc/mc96f8x16.h:214: sfr			DPL			= 0x82;
      00013E 75*6A 82         [24]  759 	mov	_DPL,#0x82
                                    760 ;	./inc/mc96f8x16.h:215: sfr			DPH			= 0x83;
      000141 75*6B 83         [24]  761 	mov	_DPH,#0x83
                                    762 ;	./inc/mc96f8x16.h:216: sfr			DPL1		= 0x84;
      000144 75*6C 84         [24]  763 	mov	_DPL1,#0x84
                                    764 ;	./inc/mc96f8x16.h:217: sfr			DPH1		= 0x85;
      000147 75*6D 85         [24]  765 	mov	_DPH1,#0x85
                                    766 ;	./inc/mc96f8x16.h:218: sfr			EO			= 0xA2;			// EXTENDED OPERATION REGISTER
      00014A 75*6E A2         [24]  767 	mov	_EO,#0xa2
                                    768 ;	./inc/mc96f8x16.h:38: sbit	P00			= 0x80;
                                    769 ;	assignBit
      00014D D2*00            [12]  770 	setb	_P00
                                    771 ;	./inc/mc96f8x16.h:39: sbit	P01			= 0x81;
                                    772 ;	assignBit
      00014F D2*01            [12]  773 	setb	_P01
                                    774 ;	./inc/mc96f8x16.h:40: sbit	P02			= 0x82;
                                    775 ;	assignBit
      000151 D2*02            [12]  776 	setb	_P02
                                    777 ;	./inc/mc96f8x16.h:41: sbit	P03			= 0x83;
                                    778 ;	assignBit
      000153 D2*03            [12]  779 	setb	_P03
                                    780 ;	./inc/mc96f8x16.h:42: sbit	P04			= 0x84;
                                    781 ;	assignBit
      000155 D2*04            [12]  782 	setb	_P04
                                    783 ;	./inc/mc96f8x16.h:43: sbit	P05			= 0x85;
                                    784 ;	assignBit
      000157 D2*05            [12]  785 	setb	_P05
                                    786 ;	./inc/mc96f8x16.h:44: sbit	P06			= 0x86;
                                    787 ;	assignBit
      000159 D2*06            [12]  788 	setb	_P06
                                    789 ;	./inc/mc96f8x16.h:45: sbit	P07			= 0x87;
                                    790 ;	assignBit
      00015B D2*07            [12]  791 	setb	_P07
                                    792 ;	./inc/mc96f8x16.h:53: sbit	P10			= 0x88;
                                    793 ;	assignBit
      00015D D2*08            [12]  794 	setb	_P10
                                    795 ;	./inc/mc96f8x16.h:54: sbit	P11			= 0x89;
                                    796 ;	assignBit
      00015F D2*09            [12]  797 	setb	_P11
                                    798 ;	./inc/mc96f8x16.h:55: sbit	P12			= 0x8A;
                                    799 ;	assignBit
      000161 D2*0A            [12]  800 	setb	_P12
                                    801 ;	./inc/mc96f8x16.h:56: sbit	P13			= 0x8B;
                                    802 ;	assignBit
      000163 D2*0B            [12]  803 	setb	_P13
                                    804 ;	./inc/mc96f8x16.h:57: sbit	P14			= 0x8C;
                                    805 ;	assignBit
      000165 D2*0C            [12]  806 	setb	_P14
                                    807 ;	./inc/mc96f8x16.h:58: sbit	P15			= 0x8D;
                                    808 ;	assignBit
      000167 D2*0D            [12]  809 	setb	_P15
                                    810 ;	./inc/mc96f8x16.h:59: sbit	P16			= 0x8E;
                                    811 ;	assignBit
      000169 D2*0E            [12]  812 	setb	_P16
                                    813 ;	./inc/mc96f8x16.h:60: sbit	P17			= 0x8F;
                                    814 ;	assignBit
      00016B D2*0F            [12]  815 	setb	_P17
                                    816 ;	./inc/mc96f8x16.h:68: sbit	P20			= 0x90;
                                    817 ;	assignBit
      00016D D2*10            [12]  818 	setb	_P20
                                    819 ;	./inc/mc96f8x16.h:69: sbit	P21			= 0x91;
                                    820 ;	assignBit
      00016F D2*11            [12]  821 	setb	_P21
                                    822 ;	./inc/mc96f8x16.h:70: sbit	P22			= 0x92;
                                    823 ;	assignBit
      000171 D2*12            [12]  824 	setb	_P22
                                    825 ;	./inc/mc96f8x16.h:71: sbit	P23			= 0x93;
                                    826 ;	assignBit
      000173 D2*13            [12]  827 	setb	_P23
                                    828 ;	./inc/mc96f8x16.h:72: sbit	P24			= 0x94;
                                    829 ;	assignBit
      000175 D2*14            [12]  830 	setb	_P24
                                    831 ;	./inc/mc96f8x16.h:73: sbit	P25			= 0x95;
                                    832 ;	assignBit
      000177 D2*15            [12]  833 	setb	_P25
                                    834 ;	./inc/mc96f8x16.h:74: sbit	P26			= 0x96;
                                    835 ;	assignBit
      000179 D2*16            [12]  836 	setb	_P26
                                    837 ;	./inc/mc96f8x16.h:75: sbit	P27			= 0x97;
                                    838 ;	assignBit
      00017B D2*17            [12]  839 	setb	_P27
                                    840 ;	./inc/mc96f8x16.h:82: sbit	P30			= 0x98;
                                    841 ;	assignBit
      00017D D2*18            [12]  842 	setb	_P30
                                    843 ;	./inc/mc96f8x16.h:83: sbit	P31			= 0x99;
                                    844 ;	assignBit
      00017F D2*19            [12]  845 	setb	_P31
                                    846 ;	./inc/mc96f8x16.h:84: sbit	P32			= 0x9A;
                                    847 ;	assignBit
      000181 D2*1A            [12]  848 	setb	_P32
                                    849 ;	./inc/mc96f8x16.h:85: sbit	P33			= 0x9B;
                                    850 ;	assignBit
      000183 D2*1B            [12]  851 	setb	_P33
                                    852 ;	./inc/mc96f8x16.h:86: sbit	P34			= 0x9C;
                                    853 ;	assignBit
      000185 D2*1C            [12]  854 	setb	_P34
                                    855 ;	./inc/mc96f8x16.h:87: sbit	P35			= 0x9D;
                                    856 ;	assignBit
      000187 D2*1D            [12]  857 	setb	_P35
                                    858 ;	./inc/mc96f8x16.h:88: sbit	P36			= 0x9E;
                                    859 ;	assignBit
      000189 D2*1E            [12]  860 	setb	_P36
                                    861 ;	./inc/mc96f8x16.h:89: sbit	P37			= 0x9F;
                                    862 ;	assignBit
      00018B D2*1F            [12]  863 	setb	_P37
                                    864 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  865 	ljmp	__sdcc_program_startup
                                    866 ;--------------------------------------------------------
                                    867 ; Home
                                    868 ;--------------------------------------------------------
                                    869 	.area HOME    (CODE)
                                    870 	.area HOME    (CODE)
      000003                        871 __sdcc_program_startup:
      000003 02r00r00         [24]  872 	ljmp	_main
                                    873 ;	return from main will return to caller
                                    874 ;--------------------------------------------------------
                                    875 ; code
                                    876 ;--------------------------------------------------------
                                    877 	.area CSEG    (CODE)
                                    878 ;------------------------------------------------------------
                                    879 ;Allocation info for local variables in function 'main'
                                    880 ;------------------------------------------------------------
                                    881 ;uart                      Allocated with name '_main_uart_65536_58'
                                    882 ;i2c                       Allocated with name '_main_i2c_65536_58'
                                    883 ;------------------------------------------------------------
                                    884 ;	src/main.c:20: int main(void)
                                    885 ;	-----------------------------------------
                                    886 ;	 function main
                                    887 ;	-----------------------------------------
      000000                        888 _main:
                           000007   889 	ar7 = 0x07
                           000006   890 	ar6 = 0x06
                           000005   891 	ar5 = 0x05
                           000004   892 	ar4 = 0x04
                           000003   893 	ar3 = 0x03
                           000002   894 	ar2 = 0x02
                           000001   895 	ar1 = 0x01
                           000000   896 	ar0 = 0x00
                                    897 ;	src/main.c:25: uart.Baud       = 12;
      000000 90r00r01         [24]  898 	mov	dptr,#_main_uart_65536_58
      000003 74 0C            [12]  899 	mov	a,#0x0c
      000005 F0               [24]  900 	movx	@dptr,a
                                    901 ;	src/main.c:26: uart.Parity     = UART_NO_PARITY;
      000006 90r00r02         [24]  902 	mov	dptr,#(_main_uart_65536_58 + 0x0001)
      000009 E4               [12]  903 	clr	a
      00000A F0               [24]  904 	movx	@dptr,a
                                    905 ;	src/main.c:27: uart.DataLength = UART_DATA_LEN_8BIT;
      00000B 90r00r03         [24]  906 	mov	dptr,#(_main_uart_65536_58 + 0x0002)
      00000E 74 03            [12]  907 	mov	a,#0x03
      000010 F0               [24]  908 	movx	@dptr,a
                                    909 ;	src/main.c:28: uart.StopBits   = UART_1_STOP_BIT;
      000011 90r00r04         [24]  910 	mov	dptr,#(_main_uart_65536_58 + 0x0003)
      000014 E4               [12]  911 	clr	a
      000015 F0               [24]  912 	movx	@dptr,a
                                    913 ;	src/main.c:35: cli();
      000016 53*17 7F         [24]  914 	anl	_IE,#0x7f
                                    915 ;	src/main.c:37: SysClock_Config();
      000019 12r00r00         [24]  916 	lcall	_SysClock_Config
                                    917 ;	src/main.c:38: UART_Config(&uart);
      00001C 90r00r01         [24]  918 	mov	dptr,#_main_uart_65536_58
      00001F 75 F0 00         [24]  919 	mov	b,#0x00
      000022 12r00r00         [24]  920 	lcall	_UART_Config
                                    921 ;	src/main.c:39: I2C_Config(&i2c);
      000025 90r00r05         [24]  922 	mov	dptr,#_main_i2c_65536_58
      000028 75 F0 00         [24]  923 	mov	b,#0x00
      00002B 12r00r00         [24]  924 	lcall	_I2C_Config
                                    925 ;	src/main.c:40: GPIO_Config();
      00002E 12r00r00         [24]  926 	lcall	_GPIO_Config
                                    927 ;	src/main.c:41: SysTick_Init();
      000031 12r00r00         [24]  928 	lcall	_SysTick_Init
                                    929 ;	src/main.c:44: sei();
      000034 43*17 80         [24]  930 	orl	_IE,#0x80
                                    931 ;	src/main.c:45: GPIOPin_Write(GPIO_LED2, GPIO_SET);
      000037 90r00r00         [24]  932 	mov	dptr,#_GPIOPin_Write_PARM_2
      00003A 74 01            [12]  933 	mov	a,#0x01
      00003C F0               [24]  934 	movx	@dptr,a
      00003D 75 82 01         [24]  935 	mov	dpl,#0x01
      000040 12r00r00         [24]  936 	lcall	_GPIOPin_Write
                                    937 ;	src/main.c:46: GPIOPin_Write(GPIO_COM_MODE, GPIO_RESET);
      000043 90r00r00         [24]  938 	mov	dptr,#_GPIOPin_Write_PARM_2
      000046 E4               [12]  939 	clr	a
      000047 F0               [24]  940 	movx	@dptr,a
      000048 75 82 05         [24]  941 	mov	dpl,#0x05
      00004B 12r00r00         [24]  942 	lcall	_GPIOPin_Write
                                    943 ;	src/main.c:47: GPIOPin_Write(GPIO_DCDC_EN, GPIO_SET);
      00004E 90r00r00         [24]  944 	mov	dptr,#_GPIOPin_Write_PARM_2
      000051 74 01            [12]  945 	mov	a,#0x01
      000053 F0               [24]  946 	movx	@dptr,a
      000054 75 82 04         [24]  947 	mov	dpl,#0x04
      000057 12r00r00         [24]  948 	lcall	_GPIOPin_Write
                                    949 ;	src/main.c:48: GPIOPin_Write(GPIO_5V_CNTL, GPIO_SET);
      00005A 90r00r00         [24]  950 	mov	dptr,#_GPIOPin_Write_PARM_2
      00005D 74 01            [12]  951 	mov	a,#0x01
      00005F F0               [24]  952 	movx	@dptr,a
      000060 75 82 03         [24]  953 	mov	dpl,#0x03
      000063 12r00r00         [24]  954 	lcall	_GPIOPin_Write
                                    955 ;	src/main.c:50: while(1)
      000066                        956 00108$:
                                    957 ;	src/main.c:63: Delayms(2000);
      000066 90 07 D0         [24]  958 	mov	dptr,#0x07d0
      000069 12r00r00         [24]  959 	lcall	_Delayms
                                    960 ;	src/main.c:64: UARTCR2 = (UARTCR2 & (~UARTCR2_RXE));
      00006C 53*54 FB         [24]  961 	anl	_UARTCR2,#0xfb
                                    962 ;	src/main.c:74: UARTCR2 = ((UARTCR2 & (~UARTCR2_RXE)) | UARTCR2_RXE);
      00006F 74 FB            [12]  963 	mov	a,#0xfb
      000071 55*54            [12]  964 	anl	a,_UARTCR2
      000073 44 04            [12]  965 	orl	a,#0x04
      000075 F5*54            [12]  966 	mov	_UARTCR2,a
                                    967 ;	src/main.c:88: GPIOPin_Toggle(GPIO_LED2);
      000077 75 82 01         [24]  968 	mov	dpl,#0x01
      00007A 12r00r00         [24]  969 	lcall	_GPIOPin_Toggle
                                    970 ;	src/main.c:108: }
      00007D 80 E7            [24]  971 	sjmp	00108$
                                    972 	.area CSEG    (CODE)
                                    973 	.area CONST   (CODE)
                                    974 	.area XINIT   (CODE)
      000000                        975 __xinit__i:
      000000 00 00                  976 	.byte #0x00, #0x00	;  0
                                    977 	.area CABS    (ABS,CODE)
